{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall2.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "aggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "returnData",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall2.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "blockAndAggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall2.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockCoinbase",
      "outputs": [
        {
          "internalType": "address",
          "name": "coinbase",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "difficulty",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockGasLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gaslimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "requireSuccess",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall2.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "tryAggregate",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall2.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "requireSuccess",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall2.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "tryBlockAndAggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "returnData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall2.Result[]",
          "name": "returnData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/test/Multicall2.sol"
  },
  "ast": {
    "absolutePath": "contracts/test/Multicall2.sol",
    "exportedSymbols": {
      "Multicall2": [
        470
      ]
    },
    "id": 471,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 162,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "id": 163,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Multicall2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 164,
          "nodeType": "StructuredDocumentation",
          "src": "60:223:1",
          "text": "@title Multicall2 - Aggregate results from multiple read-only function calls\n @author Michael Elliot <mike@makerdao.com>\n @author Joshua Levine <joshua@makerdao.com>\n @author Nick Johnson <arachnid@notdot.net>"
        },
        "fullyImplemented": true,
        "id": 470,
        "linearizedBaseContracts": [
          470
        ],
        "name": "Multicall2",
        "nameLocation": "293:10:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Multicall2.Call",
            "id": 169,
            "members": [
              {
                "constant": false,
                "id": 166,
                "mutability": "mutable",
                "name": "target",
                "nameLocation": "340:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 169,
                "src": "332:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 165,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "332:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 168,
                "mutability": "mutable",
                "name": "callData",
                "nameLocation": "362:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 169,
                "src": "356:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 167,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "356:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Call",
            "nameLocation": "317:4:1",
            "nodeType": "StructDefinition",
            "scope": 470,
            "src": "310:67:1",
            "visibility": "public"
          },
          {
            "canonicalName": "Multicall2.Result",
            "id": 174,
            "members": [
              {
                "constant": false,
                "id": 171,
                "mutability": "mutable",
                "name": "success",
                "nameLocation": "411:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 174,
                "src": "406:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 170,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "406:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 173,
                "mutability": "mutable",
                "name": "returnData",
                "nameLocation": "434:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 174,
                "src": "428:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 172,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "428:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nameLocation": "389:6:1",
            "nodeType": "StructDefinition",
            "scope": 470,
            "src": "382:69:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "581:371:1",
              "statements": [
                {
                  "expression": {
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 186,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "591:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 187,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "605:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "605:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "591:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "591:26:1"
                },
                {
                  "expression": {
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 191,
                      "name": "returnData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "627:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 195,
                            "name": "calls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "652:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Multicall2.Call memory[] memory"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "652:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "640:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 192,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "644:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "id": 193,
                          "nodeType": "ArrayTypeName",
                          "src": "644:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                            "typeString": "bytes[]"
                          }
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "640:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes memory[] memory"
                      }
                    },
                    "src": "627:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "627:38:1"
                },
                {
                  "body": {
                    "id": 237,
                    "nodeType": "Block",
                    "src": "718:228:1",
                    "statements": [
                      {
                        "assignments": [
                          212,
                          214
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 212,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "738:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 237,
                            "src": "733:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 211,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "733:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 214,
                            "mutability": "mutable",
                            "name": "ret",
                            "nameLocation": "760:3:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 237,
                            "src": "747:16:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 213,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "747:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 225,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 220,
                                  "name": "calls",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 178,
                                  "src": "805:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Multicall2.Call memory[] memory"
                                  }
                                },
                                "id": 222,
                                "indexExpression": {
                                  "id": 221,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 201,
                                  "src": "811:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "805:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Call_$169_memory_ptr",
                                  "typeString": "struct Multicall2.Call memory"
                                }
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 168,
                              "src": "805:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 215,
                                  "name": "calls",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 178,
                                  "src": "767:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Multicall2.Call memory[] memory"
                                  }
                                },
                                "id": 217,
                                "indexExpression": {
                                  "id": 216,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 201,
                                  "src": "773:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "767:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Call_$169_memory_ptr",
                                  "typeString": "struct Multicall2.Call memory"
                                }
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 166,
                              "src": "767:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "767:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "767:69:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "732:104:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 227,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 212,
                              "src": "858:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d756c746963616c6c206167677265676174653a2063616c6c206661696c6564",
                              "id": 228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "867:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f00f29c42686fd9baf65b5bd8fa63c642ded98b2f947cb8aeb6a004fb9f654ec",
                                "typeString": "literal_string \"Multicall aggregate: call failed\""
                              },
                              "value": "Multicall aggregate: call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f00f29c42686fd9baf65b5bd8fa63c642ded98b2f947cb8aeb6a004fb9f654ec",
                                "typeString": "literal_string \"Multicall aggregate: call failed\""
                              }
                            ],
                            "id": 226,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "850:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "850:52:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 230,
                        "nodeType": "ExpressionStatement",
                        "src": "850:52:1"
                      },
                      {
                        "expression": {
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 231,
                              "name": "returnData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 184,
                              "src": "916:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 233,
                            "indexExpression": {
                              "id": 232,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 201,
                              "src": "927:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "916:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 234,
                            "name": "ret",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "932:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "916:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "916:19:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 204,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 201,
                      "src": "695:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 205,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "699:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Multicall2.Call memory[] memory"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "699:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "695:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 238,
                  "initializationExpression": {
                    "assignments": [
                      201
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "688:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "680:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 203,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "692:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "680:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "713:3:1",
                      "subExpression": {
                        "id": 208,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "713:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 210,
                    "nodeType": "ExpressionStatement",
                    "src": "713:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "675:271:1"
                }
              ]
            },
            "functionSelector": "252dba42",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "aggregate",
            "nameLocation": "466:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "490:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "476:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Multicall2.Call[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 176,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 175,
                        "name": "Call",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 169,
                        "src": "476:4:1"
                      },
                      "referencedDeclaration": 169,
                      "src": "476:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Call_$169_storage_ptr",
                        "typeString": "struct Multicall2.Call"
                      }
                    },
                    "id": 177,
                    "nodeType": "ArrayTypeName",
                    "src": "476:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Call_$169_storage_$dyn_storage_ptr",
                      "typeString": "struct Multicall2.Call[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "475:21:1"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "537:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "529:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "returnData",
                  "nameLocation": "565:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "550:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 182,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "550:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 183,
                    "nodeType": "ArrayTypeName",
                    "src": "550:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:48:1"
            },
            "scope": 470,
            "src": "457:495:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "1156:123:1",
              "statements": [
                {
                  "expression": {
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 255,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 247,
                          "src": "1167:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 256,
                          "name": "blockHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "1180:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 257,
                          "name": "returnData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "1191:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Multicall2.Result memory[] memory"
                          }
                        }
                      ],
                      "id": 258,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1166:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes32,struct Multicall2.Result memory[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1239:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 261,
                          "name": "calls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "1257:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Multicall2.Call memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Multicall2.Call memory[] memory"
                          }
                        ],
                        "id": 259,
                        "name": "tryBlockAndAggregate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "1205:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$_t_bytes32_$_t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (bool,struct Multicall2.Call memory[] memory) returns (uint256,bytes32,struct Multicall2.Result memory[] memory)"
                        }
                      },
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1205:67:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$_t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256,bytes32,struct Multicall2.Result memory[] memory)"
                      }
                    },
                    "src": "1166:106:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "1166:106:1"
                }
              ]
            },
            "functionSelector": "c3077fa9",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "blockAndAggregate",
            "nameLocation": "967:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "999:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "985:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Multicall2.Call[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 242,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 241,
                        "name": "Call",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 169,
                        "src": "985:4:1"
                      },
                      "referencedDeclaration": 169,
                      "src": "985:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Call_$169_storage_ptr",
                        "typeString": "struct Multicall2.Call"
                      }
                    },
                    "id": 243,
                    "nodeType": "ArrayTypeName",
                    "src": "985:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Call_$169_storage_$dyn_storage_ptr",
                      "typeString": "struct Multicall2.Call[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "984:21:1"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "1059:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "1051:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "blockHash",
                  "nameLocation": "1092:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "1084:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "returnData",
                  "nameLocation": "1131:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "1115:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Multicall2.Result[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 251,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 250,
                        "name": "Result",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 174,
                        "src": "1115:6:1"
                      },
                      "referencedDeclaration": 174,
                      "src": "1115:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Result_$174_storage_ptr",
                        "typeString": "struct Multicall2.Result"
                      }
                    },
                    "id": 252,
                    "nodeType": "ArrayTypeName",
                    "src": "1115:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Result_$174_storage_$dyn_storage_ptr",
                      "typeString": "struct Multicall2.Result[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:114:1"
            },
            "scope": 470,
            "src": "958:321:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "1396:51:1",
              "statements": [
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 273,
                      "name": "blockHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "1406:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 275,
                          "name": "blockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "1428:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 274,
                        "name": "blockhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -5,
                        "src": "1418:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256) view returns (bytes32)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1418:22:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1406:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "1406:34:1"
                }
              ]
            },
            "functionSelector": "ee82ac5e",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockHash",
            "nameLocation": "1294:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "1315:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "1307:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1307:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1306:21:1"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "blockHash",
                  "nameLocation": "1381:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "1373:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:19:1"
            },
            "scope": 470,
            "src": "1285:162:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "1521:43:1",
              "statements": [
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 285,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "1531:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 286,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1545:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "1545:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1531:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "1531:26:1"
                }
              ]
            },
            "functionSelector": "42cbb15c",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockNumber",
            "nameLocation": "1462:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1476:2:1"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "1508:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "1500:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1500:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1499:21:1"
            },
            "scope": 470,
            "src": "1453:111:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "1644:42:1",
              "statements": [
                {
                  "expression": {
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 296,
                      "name": "coinbase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "1654:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 297,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1665:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "coinbase",
                      "nodeType": "MemberAccess",
                      "src": "1665:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1654:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:25:1"
                }
              ]
            },
            "functionSelector": "a8b0574e",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentBlockCoinbase",
            "nameLocation": "1579:23:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1602:2:1"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "coinbase",
                  "nameLocation": "1634:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "1626:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1626:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1625:18:1"
            },
            "scope": 470,
            "src": "1570:116:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 312,
              "nodeType": "Block",
              "src": "1798:46:1",
              "statements": [
                {
                  "expression": {
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 307,
                      "name": "difficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "1808:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 308,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1821:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "difficulty",
                      "nodeType": "MemberAccess",
                      "src": "1821:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1808:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:29:1"
                }
              ]
            },
            "functionSelector": "72425d9d",
            "id": 313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentBlockDifficulty",
            "nameLocation": "1701:25:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1726:2:1"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "difficulty",
                  "nameLocation": "1782:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 313,
                  "src": "1774:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1774:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1773:20:1"
            },
            "scope": 470,
            "src": "1692:152:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "1924:42:1",
              "statements": [
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 318,
                      "name": "gaslimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 316,
                      "src": "1934:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 319,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1945:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gaslimit",
                      "nodeType": "MemberAccess",
                      "src": "1945:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1934:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "1934:25:1"
                }
              ]
            },
            "functionSelector": "86d516e8",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentBlockGasLimit",
            "nameLocation": "1859:23:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1882:2:1"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "gaslimit",
                  "nameLocation": "1914:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1906:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1906:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1905:18:1"
            },
            "scope": 470,
            "src": "1850:116:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "2076:44:1",
              "statements": [
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 329,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "2086:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 330,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2098:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2098:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2086:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:27:1"
                }
              ]
            },
            "functionSelector": "0f28c97d",
            "id": 335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentBlockTimestamp",
            "nameLocation": "1981:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2005:2:1"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2061:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 335,
                  "src": "2053:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2052:19:1"
            },
            "scope": 470,
            "src": "1972:148:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "2201:39:1",
              "statements": [
                {
                  "expression": {
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 342,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "2211:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 343,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 337,
                        "src": "2221:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "2221:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2211:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:22:1"
                }
              ]
            },
            "functionSelector": "4d2301cc",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthBalance",
            "nameLocation": "2135:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2157:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "2149:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2149:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2148:14:1"
            },
            "returnParameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "2192:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "2184:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2184:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2183:17:1"
            },
            "scope": 470,
            "src": "2126:114:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "2314:56:1",
              "statements": [
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 353,
                      "name": "blockHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "2324:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 355,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2346:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "2346:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2361:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2346:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 354,
                        "name": "blockhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -5,
                        "src": "2336:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256) view returns (bytes32)"
                        }
                      },
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2336:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2324:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:39:1"
                }
              ]
            },
            "functionSelector": "27e86d6e",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLastBlockHash",
            "nameLocation": "2255:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2271:2:1"
            },
            "returnParameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "blockHash",
                  "nameLocation": "2303:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "2295:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2295:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2294:19:1"
            },
            "scope": 470,
            "src": "2246:124:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "2504:408:1",
              "statements": [
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 376,
                      "name": "returnData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "2514:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Multicall2.Result memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 381,
                            "name": "calls",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 369,
                            "src": "2540:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Multicall2.Call memory[] memory"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2540:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2527:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct Multicall2.Result memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 378,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 377,
                              "name": "Result",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 174,
                              "src": "2531:6:1"
                            },
                            "referencedDeclaration": 174,
                            "src": "2531:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$174_storage_ptr",
                              "typeString": "struct Multicall2.Result"
                            }
                          },
                          "id": 379,
                          "nodeType": "ArrayTypeName",
                          "src": "2531:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Result_$174_storage_$dyn_storage_ptr",
                            "typeString": "struct Multicall2.Result[]"
                          }
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2527:26:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Multicall2.Result memory[] memory"
                      }
                    },
                    "src": "2514:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Multicall2.Result memory[] memory"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:39:1"
                },
                {
                  "body": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "2606:300:1",
                    "statements": [
                      {
                        "assignments": [
                          398,
                          400
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 398,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "2626:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 429,
                            "src": "2621:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 397,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2621:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 400,
                            "mutability": "mutable",
                            "name": "ret",
                            "nameLocation": "2648:3:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 429,
                            "src": "2635:16:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 399,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2635:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 411,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 406,
                                  "name": "calls",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "2693:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Multicall2.Call memory[] memory"
                                  }
                                },
                                "id": 408,
                                "indexExpression": {
                                  "id": 407,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 387,
                                  "src": "2699:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2693:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Call_$169_memory_ptr",
                                  "typeString": "struct Multicall2.Call memory"
                                }
                              },
                              "id": 409,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "callData",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 168,
                              "src": "2693:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 401,
                                  "name": "calls",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 369,
                                  "src": "2655:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Multicall2.Call memory[] memory"
                                  }
                                },
                                "id": 403,
                                "indexExpression": {
                                  "id": 402,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 387,
                                  "src": "2661:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2655:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Call_$169_memory_ptr",
                                  "typeString": "struct Multicall2.Call memory"
                                }
                              },
                              "id": 404,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "target",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 166,
                              "src": "2655:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2655:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2655:69:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2620:104:1"
                      },
                      {
                        "condition": {
                          "id": 412,
                          "name": "requireSuccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 365,
                          "src": "2743:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 419,
                        "nodeType": "IfStatement",
                        "src": "2739:106:1",
                        "trueBody": {
                          "id": 418,
                          "nodeType": "Block",
                          "src": "2759:86:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 414,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 398,
                                    "src": "2785:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4d756c746963616c6c32206167677265676174653a2063616c6c206661696c6564",
                                    "id": 415,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2794:35:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_bd97bfad63caef51f3372eed9dcabcf122404ebbb470c4fd9b09fcde78ebd3cf",
                                      "typeString": "literal_string \"Multicall2 aggregate: call failed\""
                                    },
                                    "value": "Multicall2 aggregate: call failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_bd97bfad63caef51f3372eed9dcabcf122404ebbb470c4fd9b09fcde78ebd3cf",
                                      "typeString": "literal_string \"Multicall2 aggregate: call failed\""
                                    }
                                  ],
                                  "id": 413,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "2777:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2777:53:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 417,
                              "nodeType": "ExpressionStatement",
                              "src": "2777:53:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 420,
                              "name": "returnData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "2859:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Multicall2.Result memory[] memory"
                              }
                            },
                            "id": 422,
                            "indexExpression": {
                              "id": 421,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "2870:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2859:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$174_memory_ptr",
                              "typeString": "struct Multicall2.Result memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 424,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "2882:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "id": 425,
                                "name": "ret",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "2891:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 423,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "2875:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Result_$174_storage_ptr_$",
                                "typeString": "type(struct Multicall2.Result storage pointer)"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2875:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$174_memory_ptr",
                              "typeString": "struct Multicall2.Result memory"
                            }
                          },
                          "src": "2859:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Result_$174_memory_ptr",
                            "typeString": "struct Multicall2.Result memory"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "2859:36:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 390,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "2583:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 391,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 369,
                        "src": "2587:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Multicall2.Call memory[] memory"
                        }
                      },
                      "id": 392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2587:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2583:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 430,
                  "initializationExpression": {
                    "assignments": [
                      387
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2576:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "2568:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2568:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 389,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2580:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2568:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2601:3:1",
                      "subExpression": {
                        "id": 394,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "2601:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 396,
                    "nodeType": "ExpressionStatement",
                    "src": "2601:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "2563:343:1"
                }
              ]
            },
            "functionSelector": "bce38bd7",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryAggregate",
            "nameLocation": "2385:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "requireSuccess",
                  "nameLocation": "2403:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "2398:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2398:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "2433:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "2419:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Multicall2.Call[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 367,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 366,
                        "name": "Call",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 169,
                        "src": "2419:4:1"
                      },
                      "referencedDeclaration": 169,
                      "src": "2419:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Call_$169_storage_ptr",
                        "typeString": "struct Multicall2.Call"
                      }
                    },
                    "id": 368,
                    "nodeType": "ArrayTypeName",
                    "src": "2419:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Call_$169_storage_$dyn_storage_ptr",
                      "typeString": "struct Multicall2.Call[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2397:42:1"
            },
            "returnParameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "returnData",
                  "nameLocation": "2488:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "2472:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Multicall2.Result[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 372,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 371,
                        "name": "Result",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 174,
                        "src": "2472:6:1"
                      },
                      "referencedDeclaration": 174,
                      "src": "2472:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Result_$174_storage_ptr",
                        "typeString": "struct Multicall2.Result"
                      }
                    },
                    "id": 373,
                    "nodeType": "ArrayTypeName",
                    "src": "2472:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Result_$174_storage_$dyn_storage_ptr",
                      "typeString": "struct Multicall2.Result[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2471:28:1"
            },
            "scope": 470,
            "src": "2376:536:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "3140:146:1",
              "statements": [
                {
                  "expression": {
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 449,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 441,
                      "src": "3150:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 450,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3164:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "3164:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3150:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "3150:26:1"
                },
                {
                  "expression": {
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 454,
                      "name": "blockHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 443,
                      "src": "3186:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 456,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3208:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "3208:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 455,
                        "name": "blockhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -5,
                        "src": "3198:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256) view returns (bytes32)"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3198:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3186:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:35:1"
                },
                {
                  "expression": {
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 461,
                      "name": "returnData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 447,
                      "src": "3231:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Multicall2.Result memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 463,
                          "name": "requireSuccess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 434,
                          "src": "3257:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 464,
                          "name": "calls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "3273:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Multicall2.Call memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Multicall2.Call memory[] memory"
                          }
                        ],
                        "id": 462,
                        "name": "tryAggregate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "3244:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (bool,struct Multicall2.Call memory[] memory) returns (struct Multicall2.Result memory[] memory)"
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3244:35:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Multicall2.Result memory[] memory"
                      }
                    },
                    "src": "3231:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Multicall2.Result memory[] memory"
                    }
                  },
                  "id": 467,
                  "nodeType": "ExpressionStatement",
                  "src": "3231:48:1"
                }
              ]
            },
            "functionSelector": "399542e9",
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tryBlockAndAggregate",
            "nameLocation": "2927:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "requireSuccess",
                  "nameLocation": "2953:14:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "2948:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "2983:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "2969:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Call_$169_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Multicall2.Call[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 436,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 435,
                        "name": "Call",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 169,
                        "src": "2969:4:1"
                      },
                      "referencedDeclaration": 169,
                      "src": "2969:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Call_$169_storage_ptr",
                        "typeString": "struct Multicall2.Call"
                      }
                    },
                    "id": 437,
                    "nodeType": "ArrayTypeName",
                    "src": "2969:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Call_$169_storage_$dyn_storage_ptr",
                      "typeString": "struct Multicall2.Call[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2947:42:1"
            },
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "3043:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3035:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "blockHash",
                  "nameLocation": "3076:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3068:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3068:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "returnData",
                  "nameLocation": "3115:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3099:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Result_$174_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Multicall2.Result[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 445,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 444,
                        "name": "Result",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 174,
                        "src": "3099:6:1"
                      },
                      "referencedDeclaration": 174,
                      "src": "3099:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Result_$174_storage_ptr",
                        "typeString": "struct Multicall2.Result"
                      }
                    },
                    "id": 446,
                    "nodeType": "ArrayTypeName",
                    "src": "3099:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Result_$174_storage_$dyn_storage_ptr",
                      "typeString": "struct Multicall2.Result[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3021:114:1"
            },
            "scope": 470,
            "src": "2918:368:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 471,
        "src": "284:3004:1",
        "usedErrors": []
      }
    ],
    "src": "0:3289:1"
  },
  "bytecode": "608060405234801561001057600080fd5b506109d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806372425d9d1161007157806372425d9d1461013a57806386d516e814610140578063a8b0574e14610146578063bce38bd714610154578063c3077fa914610174578063ee82ac5e1461018757600080fd5b80630f28c97d146100b9578063252dba42146100ce57806327e86d6e146100ef578063399542e9146100f757806342cbb15c146101195780634d2301cc1461011f575b600080fd5b425b6040519081526020015b60405180910390f35b6100e16100dc3660046106ea565b610199565b6040516100c5929190610783565b6100bb610321565b61010a6101053660046107ed565b610334565b6040516100c5939291906108aa565b436100bb565b6100bb61012d3660046108d2565b6001600160a01b03163190565b446100bb565b456100bb565b6040514181526020016100c5565b6101676101623660046107ed565b61034c565b6040516100c591906108f4565b61010a6101823660046106ea565b610506565b6100bb610195366004610907565b4090565b8051439060609067ffffffffffffffff8111156101b8576101b8610523565b6040519080825280602002602001820160405280156101eb57816020015b60608152602001906001900390816101d65790505b50905060005b835181101561031b5760008085838151811061020f5761020f610920565b6020026020010151600001516001600160a01b031686848151811061023657610236610920565b60200260200101516020015160405161024f9190610936565b6000604051808303816000865af19150503d806000811461028c576040519150601f19603f3d011682016040523d82523d6000602084013e610291565b606091505b5091509150816102e85760405162461bcd60e51b815260206004820181905260248201527f4d756c746963616c6c206167677265676174653a2063616c6c206661696c656460448201526064015b60405180910390fd5b808484815181106102fb576102fb610920565b60200260200101819052505050808061031390610968565b9150506101f1565b50915091565b600061032e600143610983565b40905090565b4380406060610343858561034c565b90509250925092565b6060815167ffffffffffffffff81111561036857610368610523565b6040519080825280602002602001820160405280156103ae57816020015b6040805180820190915260008152606060208201528152602001906001900390816103865790505b50905060005b82518110156104ff576000808483815181106103d2576103d2610920565b6020026020010151600001516001600160a01b03168584815181106103f9576103f9610920565b6020026020010151602001516040516104129190610936565b6000604051808303816000865af19150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915085156104b657816104b65760405162461bcd60e51b815260206004820152602160248201527f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c656044820152601960fa1b60648201526084016102df565b60405180604001604052808315158152602001828152508484815181106104df576104df610920565b6020026020010181905250505080806104f790610968565b9150506103b4565b5092915050565b6000806060610516600185610334565b9196909550909350915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561055c5761055c610523565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561058b5761058b610523565b604052919050565b80356001600160a01b03811681146105aa57600080fd5b919050565b6000601f83818401126105c157600080fd5b8235602067ffffffffffffffff808311156105de576105de610523565b8260051b6105ed838201610562565b938452868101830193838101908986111561060757600080fd5b84890192505b858310156106dd578235848111156106255760008081fd5b89016040601f19828d03810182131561063e5760008081fd5b610646610539565b610651898501610593565b815282840135888111156106655760008081fd5b8085019450508d603f85011261067b5760008081fd5b888401358881111561068f5761068f610523565b61069e8a848e84011601610562565b92508083528e848287010111156106b55760008081fd5b808486018b85013760009083018a01528089019190915284525050918401919084019061060d565b9998505050505050505050565b6000602082840312156106fc57600080fd5b813567ffffffffffffffff81111561071357600080fd5b61071f848285016105af565b949350505050565b60005b8381101561074257818101518382015260200161072a565b83811115610751576000848401525b50505050565b6000815180845261076f816020860160208601610727565b601f01601f19169290920160200192915050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b828110156107df57605f198887030184526107cd868351610757565b955092840192908401906001016107b1565b509398975050505050505050565b6000806040838503121561080057600080fd5b8235801515811461081057600080fd5b9150602083013567ffffffffffffffff81111561082c57600080fd5b610838858286016105af565b9150509250929050565b6000815180845260208085019450848260051b860182860160005b8581101561089d5783830389528151805115158452850151604086850181905261088981860183610757565b9a87019a945050509084019060010161085d565b5090979650505050505050565b8381528260208201526060604082015260006108c96060830184610842565b95945050505050565b6000602082840312156108e457600080fd5b6108ed82610593565b9392505050565b6020815260006108ed6020830184610842565b60006020828403121561091957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b60008251610948818460208701610727565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561097c5761097c610952565b5060010190565b60008282101561099557610995610952565b50039056fea26469706673582212201e1b23d7547bb4a84193e2341c27c1e7658b609488aa82fdd933752080ee5d3b64736f6c634300080b0033",
  "bytecodeSha1": "418921b91876b89c9174a016f43d692c0a15843f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Multicall2",
  "coverageMap": {
    "branches": {
      "1": {
        "Multicall2.aggregate": {
          "21": [
            858,
            865,
            true
          ]
        },
        "Multicall2.tryAggregate": {
          "22": [
            2743,
            2757,
            false
          ],
          "23": [
            2785,
            2792,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "Multicall2.aggregate": {
          "7": [
            627,
            665
          ],
          "8": [
            591,
            617
          ],
          "9": [
            850,
            902
          ],
          "10": [
            916,
            935
          ],
          "11": [
            713,
            716
          ]
        },
        "Multicall2.blockAndAggregate": {
          "20": [
            1166,
            1272
          ]
        },
        "Multicall2.getBlockHash": {
          "6": [
            1406,
            1440
          ]
        },
        "Multicall2.getBlockNumber": {
          "1": [
            1531,
            1557
          ]
        },
        "Multicall2.getCurrentBlockCoinbase": {
          "5": [
            1654,
            1679
          ]
        },
        "Multicall2.getCurrentBlockDifficulty": {
          "3": [
            1808,
            1837
          ]
        },
        "Multicall2.getCurrentBlockGasLimit": {
          "4": [
            1934,
            1959
          ]
        },
        "Multicall2.getCurrentBlockTimestamp": {
          "0": [
            2086,
            2113
          ]
        },
        "Multicall2.getEthBalance": {
          "2": [
            2211,
            2233
          ]
        },
        "Multicall2.getLastBlockHash": {
          "12": [
            2324,
            2363
          ]
        },
        "Multicall2.tryAggregate": {
          "16": [
            2514,
            2553
          ],
          "17": [
            2777,
            2830
          ],
          "18": [
            2859,
            2895
          ],
          "19": [
            2601,
            2604
          ]
        },
        "Multicall2.tryBlockAndAggregate": {
          "13": [
            3150,
            3176
          ],
          "14": [
            3186,
            3221
          ],
          "15": [
            3231,
            3279
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806372425d9d1161007157806372425d9d1461013a57806386d516e814610140578063a8b0574e14610146578063bce38bd714610154578063c3077fa914610174578063ee82ac5e1461018757600080fd5b80630f28c97d146100b9578063252dba42146100ce57806327e86d6e146100ef578063399542e9146100f757806342cbb15c146101195780634d2301cc1461011f575b600080fd5b425b6040519081526020015b60405180910390f35b6100e16100dc3660046106ea565b610199565b6040516100c5929190610783565b6100bb610321565b61010a6101053660046107ed565b610334565b6040516100c5939291906108aa565b436100bb565b6100bb61012d3660046108d2565b6001600160a01b03163190565b446100bb565b456100bb565b6040514181526020016100c5565b6101676101623660046107ed565b61034c565b6040516100c591906108f4565b61010a6101823660046106ea565b610506565b6100bb610195366004610907565b4090565b8051439060609067ffffffffffffffff8111156101b8576101b8610523565b6040519080825280602002602001820160405280156101eb57816020015b60608152602001906001900390816101d65790505b50905060005b835181101561031b5760008085838151811061020f5761020f610920565b6020026020010151600001516001600160a01b031686848151811061023657610236610920565b60200260200101516020015160405161024f9190610936565b6000604051808303816000865af19150503d806000811461028c576040519150601f19603f3d011682016040523d82523d6000602084013e610291565b606091505b5091509150816102e85760405162461bcd60e51b815260206004820181905260248201527f4d756c746963616c6c206167677265676174653a2063616c6c206661696c656460448201526064015b60405180910390fd5b808484815181106102fb576102fb610920565b60200260200101819052505050808061031390610968565b9150506101f1565b50915091565b600061032e600143610983565b40905090565b4380406060610343858561034c565b90509250925092565b6060815167ffffffffffffffff81111561036857610368610523565b6040519080825280602002602001820160405280156103ae57816020015b6040805180820190915260008152606060208201528152602001906001900390816103865790505b50905060005b82518110156104ff576000808483815181106103d2576103d2610920565b6020026020010151600001516001600160a01b03168584815181106103f9576103f9610920565b6020026020010151602001516040516104129190610936565b6000604051808303816000865af19150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915085156104b657816104b65760405162461bcd60e51b815260206004820152602160248201527f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c656044820152601960fa1b60648201526084016102df565b60405180604001604052808315158152602001828152508484815181106104df576104df610920565b6020026020010181905250505080806104f790610968565b9150506103b4565b5092915050565b6000806060610516600185610334565b9196909550909350915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561055c5761055c610523565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561058b5761058b610523565b604052919050565b80356001600160a01b03811681146105aa57600080fd5b919050565b6000601f83818401126105c157600080fd5b8235602067ffffffffffffffff808311156105de576105de610523565b8260051b6105ed838201610562565b938452868101830193838101908986111561060757600080fd5b84890192505b858310156106dd578235848111156106255760008081fd5b89016040601f19828d03810182131561063e5760008081fd5b610646610539565b610651898501610593565b815282840135888111156106655760008081fd5b8085019450508d603f85011261067b5760008081fd5b888401358881111561068f5761068f610523565b61069e8a848e84011601610562565b92508083528e848287010111156106b55760008081fd5b808486018b85013760009083018a01528089019190915284525050918401919084019061060d565b9998505050505050505050565b6000602082840312156106fc57600080fd5b813567ffffffffffffffff81111561071357600080fd5b61071f848285016105af565b949350505050565b60005b8381101561074257818101518382015260200161072a565b83811115610751576000848401525b50505050565b6000815180845261076f816020860160208601610727565b601f01601f19169290920160200192915050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b828110156107df57605f198887030184526107cd868351610757565b955092840192908401906001016107b1565b509398975050505050505050565b6000806040838503121561080057600080fd5b8235801515811461081057600080fd5b9150602083013567ffffffffffffffff81111561082c57600080fd5b610838858286016105af565b9150509250929050565b6000815180845260208085019450848260051b860182860160005b8581101561089d5783830389528151805115158452850151604086850181905261088981860183610757565b9a87019a945050509084019060010161085d565b5090979650505050505050565b8381528260208201526060604082015260006108c96060830184610842565b95945050505050565b6000602082840312156108e457600080fd5b6108ed82610593565b9392505050565b6020815260006108ed6020830184610842565b60006020828403121561091957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b60008251610948818460208701610727565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561097c5761097c610952565b5060010190565b60008282101561099557610995610952565b50039056fea26469706673582212201e1b23d7547bb4a84193e2341c27c1e7658b609488aa82fdd933752080ee5d3b64736f6c634300080b0033",
  "deployedSourceMap": "284:3004:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:148;2098:15;1972:148;;;160:25:2;;;148:2;133:18;1972:148:1;;;;;;;;457:495;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2246:124::-;;;:::i;2918:368::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1453:111::-;1545:12;1453:111;;2126:114;;;;;;:::i;:::-;-1:-1:-1;;;;;2221:12:1;;;2126:114;1692:152;1821:16;1692:152;;1850:116;1945:14;1850:116;;1570;;;1665:14;7258:51:2;;7246:2;7231:18;1570:116:1;7112:203:2;2376:536:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;958:321::-;;;;;;:::i;:::-;;:::i;1285:162::-;;;;;;:::i;:::-;1418:22;;1285:162;457:495;652:12;;605;;550:25;;640;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:38;;680:9;675:271;699:5;:12;695:1;:16;675:271;;;733:12;747:16;767:5;773:1;767:8;;;;;;;;:::i;:::-;;;;;;;:15;;;-1:-1:-1;;;;;767:20:1;805:5;811:1;805:8;;;;;;;;:::i;:::-;;;;;;;:17;;;767:69;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;732:104;;;;858:7;850:52;;;;-1:-1:-1;;;850:52:1;;8436:2:2;850:52:1;;;8418:21:2;;;8455:18;;;8448:30;8514:34;8494:18;;;8487:62;8566:18;;850:52:1;;;;;;;;;932:3;916:10;927:1;916:13;;;;;;;;:::i;:::-;;;;;;:19;;;;718:228;;713:3;;;;;:::i;:::-;;;;675:271;;;;457:495;;;:::o;2246:124::-;2295:17;2346:16;2361:1;2346:12;:16;:::i;:::-;2336:27;2324:39;;2246:124;:::o;2918:368::-;3164:12;3198:23;;3099:26;3244:35;3257:14;3273:5;3244:12;:35::i;:::-;3231:48;;2918:368;;;;;:::o;2376:536::-;2472:26;2540:5;:12;2527:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2527:26:1;;;;;;;;;;;;;;;;2514:39;;2568:9;2563:343;2587:5;:12;2583:1;:16;2563:343;;;2621:12;2635:16;2655:5;2661:1;2655:8;;;;;;;;:::i;:::-;;;;;;;:15;;;-1:-1:-1;;;;;2655:20:1;2693:5;2699:1;2693:8;;;;;;;;:::i;:::-;;;;;;;:17;;;2655:69;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:104;;;;2743:14;2739:106;;;2785:7;2777:53;;;;-1:-1:-1;;;2777:53:1;;9199:2:2;2777:53:1;;;9181:21:2;9238:2;9218:18;;;9211:30;9277:34;9257:18;;;9250:62;-1:-1:-1;;;9328:18:2;;;9321:31;9369:19;;2777:53:1;8997:397:2;2777:53:1;2875:20;;;;;;;;2882:7;2875:20;;;;;;2891:3;2875:20;;;2859:10;2870:1;2859:13;;;;;;;;:::i;:::-;;;;;;:36;;;;2606:300;;2601:3;;;;;:::i;:::-;;;;2563:343;;;;2376:536;;;;:::o;958:321::-;1051:19;1084:17;1115:26;1205:67;1239:4;1257:5;1205:20;:67::i;:::-;1166:106;;;;-1:-1:-1;1166:106:1;;-1:-1:-1;958:321:1;-1:-1:-1;;958:321:1:o;196:127:2:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:257;400:4;394:11;;;432:17;;479:18;464:34;;500:22;;;461:62;458:88;;;526:18;;:::i;:::-;562:4;555:24;328:257;:::o;590:275::-;661:2;655:9;726:2;707:13;;-1:-1:-1;;703:27:2;691:40;;761:18;746:34;;782:22;;;743:62;740:88;;;808:18;;:::i;:::-;844:2;837:22;590:275;;-1:-1:-1;590:275:2:o;870:173::-;938:20;;-1:-1:-1;;;;;987:31:2;;977:42;;967:70;;1033:1;1030;1023:12;967:70;870:173;;;:::o;1048:2118::-;1106:5;1136:4;1180:3;1175:2;1167:6;1163:15;1159:25;1149:53;;1198:1;1195;1188:12;1149:53;1234:6;1221:20;1260:4;1283:18;1320:2;1316;1313:10;1310:36;;;1326:18;;:::i;:::-;1372:2;1369:1;1365:10;1395:28;1419:2;1415;1411:11;1395:28;:::i;:::-;1457:15;;;1527;;;1523:24;;;1488:12;;;;1559:15;;;1556:35;;;1587:1;1584;1577:12;1556:35;1623:2;1615:6;1611:15;1600:26;;1635:1502;1651:6;1646:3;1643:15;1635:1502;;;1737:3;1724:17;1773:2;1760:11;1757:19;1754:109;;;1817:1;1846:2;1842;1835:14;1754:109;1886:24;;1933:4;-1:-1:-1;;1991:12:2;;;1987:21;;1983:30;-1:-1:-1;1980:123:2;;;2055:1;2085:3;2080;2073:16;1980:123;2129:22;;:::i;:::-;2178:31;2205:2;2201;2197:11;2178:31;:::i;:::-;2171:5;2164:46;2260:2;2256;2252:11;2239:25;2293:2;2283:8;2280:16;2277:109;;;2338:1;2368:3;2363;2356:16;2277:109;2418:8;2414:2;2410:17;2399:28;;;2468:3;2463:2;2458:3;2454:12;2450:22;2440:123;;2515:1;2545:3;2540;2533:16;2440:123;2609:2;2604:3;2600:12;2587:26;2637:2;2632:3;2629:11;2626:37;;;2643:18;;:::i;:::-;2691:47;2734:2;2729;2724;2719:3;2715:12;2711:21;2707:30;2691:47;:::i;:::-;2676:62;;2767:3;2758:7;2751:20;2814:3;2809:2;2803:3;2798;2794:13;2790:22;2787:31;2784:124;;;2860:1;2890:3;2885;2878:16;2784:124;2966:3;2961:2;2956:3;2952:12;2947:2;2938:7;2934:16;2921:49;3018:1;2994:17;;;2990:26;;2983:37;3040:14;;;3033:31;;;;3077:18;;-1:-1:-1;;1668:12:2;;;;3115;;;;1635:1502;;;3155:5;1048:2118;-1:-1:-1;;;;;;;;;1048:2118:2:o;3171:373::-;3276:6;3329:2;3317:9;3308:7;3304:23;3300:32;3297:52;;;3345:1;3342;3335:12;3297:52;3385:9;3372:23;3418:18;3410:6;3407:30;3404:50;;;3450:1;3447;3440:12;3404:50;3473:65;3530:7;3521:6;3510:9;3506:22;3473:65;:::i;:::-;3463:75;3171:373;-1:-1:-1;;;;3171:373:2:o;3549:258::-;3621:1;3631:113;3645:6;3642:1;3639:13;3631:113;;;3721:11;;;3715:18;3702:11;;;3695:39;3667:2;3660:10;3631:113;;;3762:6;3759:1;3756:13;3753:48;;;3797:1;3788:6;3783:3;3779:16;3772:27;3753:48;;3549:258;;;:::o;3812:257::-;3853:3;3891:5;3885:12;3918:6;3913:3;3906:19;3934:63;3990:6;3983:4;3978:3;3974:14;3967:4;3960:5;3956:16;3934:63;:::i;:::-;4051:2;4030:15;-1:-1:-1;;4026:29:2;4017:39;;;;4058:4;4013:50;;3812:257;-1:-1:-1;;3812:257:2:o;4074:871::-;4262:4;4310:2;4299:9;4295:18;4340:6;4329:9;4322:25;4366:2;4404;4399;4388:9;4384:18;4377:30;4427:6;4462;4456:13;4493:6;4485;4478:22;4531:2;4520:9;4516:18;4509:25;;4593:2;4583:6;4580:1;4576:14;4565:9;4561:30;4557:39;4543:53;;4631:2;4623:6;4619:15;4652:1;4662:254;4676:6;4673:1;4670:13;4662:254;;;4769:2;4765:7;4753:9;4745:6;4741:22;4737:36;4732:3;4725:49;4797:39;4829:6;4820;4814:13;4797:39;:::i;:::-;4787:49;-1:-1:-1;4894:12:2;;;;4859:15;;;;4698:1;4691:9;4662:254;;;-1:-1:-1;4933:6:2;;4074:871;-1:-1:-1;;;;;;;;4074:871:2:o;5132:534::-;5243:6;5251;5304:2;5292:9;5283:7;5279:23;5275:32;5272:52;;;5320:1;5317;5310:12;5272:52;5359:9;5346:23;5412:5;5405:13;5398:21;5391:5;5388:32;5378:60;;5434:1;5431;5424:12;5378:60;5457:5;-1:-1:-1;5513:2:2;5498:18;;5485:32;5540:18;5529:30;;5526:50;;;5572:1;5569;5562:12;5526:50;5595:65;5652:7;5643:6;5632:9;5628:22;5595:65;:::i;:::-;5585:75;;;5132:534;;;;;:::o;5671:785::-;5730:3;5768:5;5762:12;5795:6;5790:3;5783:19;5821:4;5850:2;5845:3;5841:12;5834:19;;5875:3;5915:6;5912:1;5908:14;5903:3;5899:24;5957:2;5950:5;5946:14;5978:1;5988:442;6002:6;5999:1;5996:13;5988:442;;;6063:16;;;6051:29;;6103:13;;6183:9;;6176:17;6169:25;6156:39;;6234:11;;6228:18;6139:4;6266:13;;;6259:25;;;6305:45;6336:13;;;6228:18;6305:45;:::i;:::-;6408:12;;;;6297:53;-1:-1:-1;;;6373:15:2;;;;6024:1;6017:9;5988:442;;;-1:-1:-1;6446:4:2;;5671:785;-1:-1:-1;;;;;;;5671:785:2:o;6461:455::-;6742:6;6731:9;6724:25;6785:6;6780:2;6769:9;6765:18;6758:34;6828:2;6823;6812:9;6808:18;6801:30;6705:4;6848:62;6906:2;6895:9;6891:18;6883:6;6848:62;:::i;:::-;6840:70;6461:455;-1:-1:-1;;;;;6461:455:2:o;6921:186::-;6980:6;7033:2;7021:9;7012:7;7008:23;7004:32;7001:52;;;7049:1;7046;7039:12;7001:52;7072:29;7091:9;7072:29;:::i;:::-;7062:39;6921:186;-1:-1:-1;;;6921:186:2:o;7320:313::-;7545:2;7534:9;7527:21;7508:4;7565:62;7623:2;7612:9;7608:18;7600:6;7565:62;:::i;7638:180::-;7697:6;7750:2;7738:9;7729:7;7725:23;7721:32;7718:52;;;7766:1;7763;7756:12;7718:52;-1:-1:-1;7789:23:2;;7638:180;-1:-1:-1;7638:180:2:o;7823:127::-;7884:10;7879:3;7875:20;7872:1;7865:31;7915:4;7912:1;7905:15;7939:4;7936:1;7929:15;7955:274;8084:3;8122:6;8116:13;8138:53;8184:6;8179:3;8172:4;8164:6;8160:17;8138:53;:::i;:::-;8207:16;;;;;7955:274;-1:-1:-1;;7955:274:2:o;8595:127::-;8656:10;8651:3;8647:20;8644:1;8637:31;8687:4;8684:1;8677:15;8711:4;8708:1;8701:15;8727:135;8766:3;-1:-1:-1;;8787:17:2;;8784:43;;;8807:18;;:::i;:::-;-1:-1:-1;8854:1:2;8843:13;;8727:135::o;8867:125::-;8907:4;8935:1;8932;8929:8;8926:34;;;8940:18;;:::i;:::-;-1:-1:-1;8977:9:2;;8867:125::o",
  "language": "Solidity",
  "natspec": {
    "author": "Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>",
    "kind": "dev",
    "methods": {},
    "title": "Multicall2 - Aggregate results from multiple read-only function calls",
    "version": 1
  },
  "offset": [
    284,
    3288
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72425D9D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x72425D9D EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x86D516E8 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA8B0574E EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xBCE38BD7 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xC3077FA9 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xEE82AC5E EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF28C97D EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x252DBA42 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x27E86D6E EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x399542E9 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x42CBB15C EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x4D2301CC EQ PUSH2 0x11F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP3 SWAP2 SWAP1 PUSH2 0x783 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x321 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x105 CALLDATASIZE PUSH1 0x4 PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8AA JUMP JUMPDEST NUMBER PUSH2 0xBB JUMP JUMPDEST PUSH2 0xBB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST DIFFICULTY PUSH2 0xBB JUMP JUMPDEST GASLIMIT PUSH2 0xBB JUMP JUMPDEST PUSH1 0x40 MLOAD COINBASE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC5 JUMP JUMPDEST PUSH2 0x167 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP2 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x10A PUSH2 0x182 CALLDATASIZE PUSH1 0x4 PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST PUSH2 0xBB PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x907 JUMP JUMPDEST BLOCKHASH SWAP1 JUMP JUMPDEST DUP1 MLOAD NUMBER SWAP1 PUSH1 0x60 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B8 JUMPI PUSH2 0x1B8 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1EB JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1D6 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x31B JUMPI PUSH1 0x0 DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x20F JUMPI PUSH2 0x20F PUSH2 0x920 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x236 JUMPI PUSH2 0x236 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x291 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C746963616C6C206167677265676174653A2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x920 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x313 SWAP1 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F1 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E PUSH1 0x1 NUMBER PUSH2 0x983 JUMP JUMPDEST BLOCKHASH SWAP1 POP SWAP1 JUMP JUMPDEST NUMBER DUP1 BLOCKHASH PUSH1 0x60 PUSH2 0x343 DUP6 DUP6 PUSH2 0x34C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x368 JUMPI PUSH2 0x368 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3AE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x386 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3F9 JUMPI PUSH2 0x3F9 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x44F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x454 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP6 ISZERO PUSH2 0x4B6 JUMPI DUP2 PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D756C746963616C6C32206167677265676174653A2063616C6C206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x4DF JUMPI PUSH2 0x4DF PUSH2 0x920 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x4F7 SWAP1 PUSH2 0x968 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3B4 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH2 0x516 PUSH1 0x1 DUP6 PUSH2 0x334 JUMP JUMPDEST SWAP2 SWAP7 SWAP1 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x55C JUMPI PUSH2 0x55C PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x58B JUMPI PUSH2 0x58B PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP4 DUP2 DUP5 ADD SLT PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DE PUSH2 0x523 JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH2 0x5ED DUP4 DUP3 ADD PUSH2 0x562 JUMP JUMPDEST SWAP4 DUP5 MSTORE DUP7 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP1 DUP10 DUP7 GT ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP10 ADD SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x6DD JUMPI DUP3 CALLDATALOAD DUP5 DUP2 GT ISZERO PUSH2 0x625 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP10 ADD PUSH1 0x40 PUSH1 0x1F NOT DUP3 DUP14 SUB DUP2 ADD DUP3 SGT ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x646 PUSH2 0x539 JUMP JUMPDEST PUSH2 0x651 DUP10 DUP6 ADD PUSH2 0x593 JUMP JUMPDEST DUP2 MSTORE DUP3 DUP5 ADD CALLDATALOAD DUP9 DUP2 GT ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP1 DUP6 ADD SWAP5 POP POP DUP14 PUSH1 0x3F DUP6 ADD SLT PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP9 DUP5 ADD CALLDATALOAD DUP9 DUP2 GT ISZERO PUSH2 0x68F JUMPI PUSH2 0x68F PUSH2 0x523 JUMP JUMPDEST PUSH2 0x69E DUP11 DUP5 DUP15 DUP5 ADD AND ADD PUSH2 0x562 JUMP JUMPDEST SWAP3 POP DUP1 DUP4 MSTORE DUP15 DUP5 DUP3 DUP8 ADD ADD GT ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP1 DUP5 DUP7 ADD DUP12 DUP6 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP4 ADD DUP11 ADD MSTORE DUP1 DUP10 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MSTORE POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x60D JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71F DUP5 DUP3 DUP6 ADD PUSH2 0x5AF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x742 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x72A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x751 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x76F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x727 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP3 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7DF JUMPI PUSH1 0x5F NOT DUP9 DUP8 SUB ADD DUP5 MSTORE PUSH2 0x7CD DUP7 DUP4 MLOAD PUSH2 0x757 JUMP JUMPDEST SWAP6 POP SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7B1 JUMP JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x838 DUP6 DUP3 DUP7 ADD PUSH2 0x5AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP5 DUP3 PUSH1 0x5 SHL DUP7 ADD DUP3 DUP7 ADD PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x89D JUMPI DUP4 DUP4 SUB DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD ISZERO ISZERO DUP5 MSTORE DUP6 ADD MLOAD PUSH1 0x40 DUP7 DUP6 ADD DUP2 SWAP1 MSTORE PUSH2 0x889 DUP2 DUP7 ADD DUP4 PUSH2 0x757 JUMP JUMPDEST SWAP11 DUP8 ADD SWAP11 SWAP5 POP POP POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x85D JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x8C9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x842 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8ED DUP3 PUSH2 0x593 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x8ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x842 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x948 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x727 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x97C JUMPI PUSH2 0x97C PUSH2 0x952 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x995 JUMPI PUSH2 0x995 PUSH2 0x952 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SHL 0x23 0xD7 SLOAD PUSH28 0xB4A84193E2341C27C1E7658B609488AA82FDD933752080EE5D3B6473 PUSH16 0x6C634300080B00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        284,
        3288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x72425D9D"
    },
    "38": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x72425D9D"
    },
    "49": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A"
    },
    "53": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x86D516E8"
    },
    "60": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140"
    },
    "64": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA8B0574E"
    },
    "71": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "75": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBCE38BD7"
    },
    "82": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x154"
    },
    "86": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC3077FA9"
    },
    "93": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x174"
    },
    "97": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEE82AC5E"
    },
    "104": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x187"
    },
    "108": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "REVERT",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF28C97D"
    },
    "120": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x252DBA42"
    },
    "131": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCE"
    },
    "135": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x27E86D6E"
    },
    "142": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF"
    },
    "146": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x399542E9"
    },
    "153": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "154": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7"
    },
    "157": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42CBB15C"
    },
    "164": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x119"
    },
    "168": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4D2301CC"
    },
    "175": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "EQ",
      "path": "1"
    },
    "176": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F"
    },
    "179": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "180": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "DUP1",
      "path": "1"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        284,
        3288
      ],
      "op": "REVERT",
      "path": "1"
    },
    "185": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "186": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        2098,
        2113
      ],
      "op": "TIMESTAMP",
      "path": "1",
      "statement": 0
    },
    "187": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "188": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "190": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "191": {
      "op": "SWAP1"
    },
    "192": {
      "op": "DUP2"
    },
    "193": {
      "op": "MSTORE"
    },
    "194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "196": {
      "op": "ADD"
    },
    "197": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "198": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "200": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "201": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "DUP1",
      "path": "1"
    },
    "202": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "203": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "SUB",
      "path": "1"
    },
    "204": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "205": {
      "fn": "Multicall2.getCurrentBlockTimestamp",
      "offset": [
        1972,
        2120
      ],
      "op": "RETURN",
      "path": "1"
    },
    "206": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "207": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1"
    },
    "210": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "213": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "214": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "216": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6EA"
    },
    "219": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        457,
        952
      ],
      "op": "JUMP",
      "path": "1"
    },
    "220": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x199"
    },
    "224": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        457,
        952
      ],
      "op": "JUMP",
      "path": "1"
    },
    "225": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "226": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "228": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "229": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5"
    },
    "232": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "233": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "234": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "235": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x783"
    },
    "238": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        457,
        952
      ],
      "op": "JUMP",
      "path": "1"
    },
    "239": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2246,
        2370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "240": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2246,
        2370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "243": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2246,
        2370
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x321"
    },
    "246": {
      "fn": "Multicall2.getLastBlockHash",
      "jump": "i",
      "offset": [
        2246,
        2370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "247": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "248": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A"
    },
    "251": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "254": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "255": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "257": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7ED"
    },
    "260": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "jump": "i",
      "offset": [
        2918,
        3286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "261": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "262": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x334"
    },
    "265": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "jump": "i",
      "offset": [
        2918,
        3286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "266": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "267": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "269": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "270": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5"
    },
    "273": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "274": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "275": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "276": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "277": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8AA"
    },
    "280": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "jump": "i",
      "offset": [
        2918,
        3286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "281": {
      "fn": "Multicall2.getBlockNumber",
      "offset": [
        1453,
        1564
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "282": {
      "fn": "Multicall2.getBlockNumber",
      "offset": [
        1545,
        1557
      ],
      "op": "NUMBER",
      "path": "1",
      "statement": 1
    },
    "283": {
      "fn": "Multicall2.getBlockNumber",
      "offset": [
        1453,
        1564
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "286": {
      "fn": "Multicall2.getBlockNumber",
      "offset": [
        1453,
        1564
      ],
      "op": "JUMP",
      "path": "1"
    },
    "287": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2126,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "288": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2126,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "291": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2126,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12D"
    },
    "294": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2126,
        2240
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "295": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2126,
        2240
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "297": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2126,
        2240
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D2"
    },
    "300": {
      "fn": "Multicall2.getEthBalance",
      "jump": "i",
      "offset": [
        2126,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "301": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2126,
        2240
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "308": {
      "op": "SHL"
    },
    "309": {
      "op": "SUB"
    },
    "310": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2221,
        2233
      ],
      "op": "AND",
      "path": "1",
      "statement": 2
    },
    "311": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2221,
        2233
      ],
      "op": "BALANCE",
      "path": "1"
    },
    "312": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2221,
        2233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "313": {
      "fn": "Multicall2.getEthBalance",
      "offset": [
        2126,
        2240
      ],
      "op": "JUMP",
      "path": "1"
    },
    "314": {
      "fn": "Multicall2.getCurrentBlockDifficulty",
      "offset": [
        1692,
        1844
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "315": {
      "fn": "Multicall2.getCurrentBlockDifficulty",
      "offset": [
        1821,
        1837
      ],
      "op": "DIFFICULTY",
      "path": "1",
      "statement": 3
    },
    "316": {
      "fn": "Multicall2.getCurrentBlockDifficulty",
      "offset": [
        1692,
        1844
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "319": {
      "fn": "Multicall2.getCurrentBlockDifficulty",
      "offset": [
        1692,
        1844
      ],
      "op": "JUMP",
      "path": "1"
    },
    "320": {
      "fn": "Multicall2.getCurrentBlockGasLimit",
      "offset": [
        1850,
        1966
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "321": {
      "fn": "Multicall2.getCurrentBlockGasLimit",
      "offset": [
        1945,
        1959
      ],
      "op": "GASLIMIT",
      "path": "1",
      "statement": 4
    },
    "322": {
      "fn": "Multicall2.getCurrentBlockGasLimit",
      "offset": [
        1850,
        1966
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "325": {
      "fn": "Multicall2.getCurrentBlockGasLimit",
      "offset": [
        1850,
        1966
      ],
      "op": "JUMP",
      "path": "1"
    },
    "326": {
      "fn": "Multicall2.getCurrentBlockCoinbase",
      "offset": [
        1570,
        1686
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "327": {
      "fn": "Multicall2.getCurrentBlockCoinbase",
      "offset": [
        1570,
        1686
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "329": {
      "fn": "Multicall2.getCurrentBlockCoinbase",
      "offset": [
        1570,
        1686
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "330": {
      "fn": "Multicall2.getCurrentBlockCoinbase",
      "offset": [
        1665,
        1679
      ],
      "op": "COINBASE",
      "path": "1",
      "statement": 5
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "fn": "Multicall2.getCurrentBlockCoinbase",
      "offset": [
        1570,
        1686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5"
    },
    "339": {
      "op": "JUMP"
    },
    "340": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "341": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x167"
    },
    "344": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "347": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "348": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "350": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7ED"
    },
    "353": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2376,
        2912
      ],
      "op": "JUMP",
      "path": "1"
    },
    "354": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "355": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34C"
    },
    "358": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2376,
        2912
      ],
      "op": "JUMP",
      "path": "1"
    },
    "359": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "360": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "362": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "363": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5"
    },
    "366": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "367": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "368": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "371": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2376,
        2912
      ],
      "op": "JUMP",
      "path": "1"
    },
    "372": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "373": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A"
    },
    "376": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x182"
    },
    "379": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "380": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "382": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6EA"
    },
    "385": {
      "fn": "Multicall2.blockAndAggregate",
      "jump": "i",
      "offset": [
        958,
        1279
      ],
      "op": "JUMP",
      "path": "1"
    },
    "386": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "387": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x506"
    },
    "390": {
      "fn": "Multicall2.blockAndAggregate",
      "jump": "i",
      "offset": [
        958,
        1279
      ],
      "op": "JUMP",
      "path": "1"
    },
    "391": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1285,
        1447
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "392": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1285,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB"
    },
    "395": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1285,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x195"
    },
    "398": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1285,
        1447
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "399": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1285,
        1447
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "401": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1285,
        1447
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x907"
    },
    "404": {
      "fn": "Multicall2.getBlockHash",
      "jump": "i",
      "offset": [
        1285,
        1447
      ],
      "op": "JUMP",
      "path": "1"
    },
    "405": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1285,
        1447
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "406": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1418,
        1440
      ],
      "op": "BLOCKHASH",
      "path": "1",
      "statement": 6
    },
    "407": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1418,
        1440
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "408": {
      "fn": "Multicall2.getBlockHash",
      "offset": [
        1285,
        1447
      ],
      "op": "JUMP",
      "path": "1"
    },
    "409": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "410": {
      "fn": "Multicall2.aggregate",
      "offset": [
        652,
        664
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 7
    },
    "411": {
      "fn": "Multicall2.aggregate",
      "offset": [
        652,
        664
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "412": {
      "fn": "Multicall2.aggregate",
      "offset": [
        605,
        617
      ],
      "op": "NUMBER",
      "path": "1",
      "statement": 8
    },
    "413": {
      "fn": "Multicall2.aggregate",
      "offset": [
        605,
        617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "414": {
      "fn": "Multicall2.aggregate",
      "offset": [
        550,
        575
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "416": {
      "fn": "Multicall2.aggregate",
      "offset": [
        550,
        575
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "417": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "426": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP2",
      "path": "1"
    },
    "427": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "GT",
      "path": "1"
    },
    "428": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "429": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B8"
    },
    "432": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "433": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B8"
    },
    "436": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x523"
    },
    "439": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        640,
        665
      ],
      "op": "JUMP",
      "path": "1"
    },
    "440": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "441": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "443": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "444": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "445": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP1",
      "path": "1"
    },
    "446": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP3",
      "path": "1"
    },
    "447": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "448": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP1",
      "path": "1"
    },
    "449": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "451": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "MUL",
      "path": "1"
    },
    "452": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "454": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "ADD",
      "path": "1"
    },
    "455": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP3",
      "path": "1"
    },
    "456": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "ADD",
      "path": "1"
    },
    "457": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "459": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "460": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP1",
      "path": "1"
    },
    "461": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "462": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EB"
    },
    "465": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "466": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP2",
      "path": "1"
    },
    "467": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "469": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "ADD",
      "path": "1"
    },
    "470": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "471": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "473": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP2",
      "path": "1"
    },
    "474": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "475": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "477": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "ADD",
      "path": "1"
    },
    "478": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "479": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "481": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "482": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "SUB",
      "path": "1"
    },
    "483": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "484": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "DUP2",
      "path": "1"
    },
    "485": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D6"
    },
    "488": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "489": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "490": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "POP",
      "path": "1"
    },
    "491": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "492": {
      "fn": "Multicall2.aggregate",
      "offset": [
        640,
        665
      ],
      "op": "POP",
      "path": "1"
    },
    "493": {
      "fn": "Multicall2.aggregate",
      "offset": [
        627,
        665
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "494": {
      "fn": "Multicall2.aggregate",
      "offset": [
        627,
        665
      ],
      "op": "POP",
      "path": "1"
    },
    "495": {
      "fn": "Multicall2.aggregate",
      "offset": [
        680,
        689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "497": {
      "fn": "Multicall2.aggregate",
      "offset": [
        675,
        946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "498": {
      "fn": "Multicall2.aggregate",
      "offset": [
        699,
        704
      ],
      "op": "DUP4",
      "path": "1"
    },
    "499": {
      "fn": "Multicall2.aggregate",
      "offset": [
        699,
        711
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "500": {
      "fn": "Multicall2.aggregate",
      "offset": [
        695,
        696
      ],
      "op": "DUP2",
      "path": "1"
    },
    "501": {
      "fn": "Multicall2.aggregate",
      "offset": [
        695,
        711
      ],
      "op": "LT",
      "path": "1"
    },
    "502": {
      "fn": "Multicall2.aggregate",
      "offset": [
        675,
        946
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "503": {
      "fn": "Multicall2.aggregate",
      "offset": [
        675,
        946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31B"
    },
    "506": {
      "fn": "Multicall2.aggregate",
      "offset": [
        675,
        946
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "507": {
      "fn": "Multicall2.aggregate",
      "offset": [
        733,
        745
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "509": {
      "fn": "Multicall2.aggregate",
      "offset": [
        747,
        763
      ],
      "op": "DUP1",
      "path": "1"
    },
    "510": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        772
      ],
      "op": "DUP6",
      "path": "1"
    },
    "511": {
      "fn": "Multicall2.aggregate",
      "offset": [
        773,
        774
      ],
      "op": "DUP4",
      "path": "1"
    },
    "512": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "DUP2",
      "path": "1"
    },
    "513": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "514": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "DUP2",
      "path": "1"
    },
    "515": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "LT",
      "path": "1"
    },
    "516": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20F"
    },
    "519": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "520": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20F"
    },
    "523": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x920"
    },
    "526": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        767,
        775
      ],
      "op": "JUMP",
      "path": "1"
    },
    "527": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "528": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "530": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "MUL",
      "path": "1"
    },
    "531": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "533": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "ADD",
      "path": "1"
    },
    "534": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "ADD",
      "path": "1"
    },
    "535": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        775
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "536": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        782
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "538": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        782
      ],
      "op": "ADD",
      "path": "1"
    },
    "539": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        782
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        787
      ],
      "op": "AND",
      "path": "1"
    },
    "549": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        810
      ],
      "op": "DUP7",
      "path": "1"
    },
    "550": {
      "fn": "Multicall2.aggregate",
      "offset": [
        811,
        812
      ],
      "op": "DUP5",
      "path": "1"
    },
    "551": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "552": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "553": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "DUP2",
      "path": "1"
    },
    "554": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "LT",
      "path": "1"
    },
    "555": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236"
    },
    "558": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "559": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x236"
    },
    "562": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x920"
    },
    "565": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        805,
        813
      ],
      "op": "JUMP",
      "path": "1"
    },
    "566": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "567": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "569": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "MUL",
      "path": "1"
    },
    "570": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "572": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "ADD",
      "path": "1"
    },
    "573": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "ADD",
      "path": "1"
    },
    "574": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        813
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "575": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "577": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        822
      ],
      "op": "ADD",
      "path": "1"
    },
    "578": {
      "fn": "Multicall2.aggregate",
      "offset": [
        805,
        822
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "579": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "581": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "582": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24F"
    },
    "585": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "586": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "587": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x936"
    },
    "590": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        767,
        836
      ],
      "op": "JUMP",
      "path": "1"
    },
    "591": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "592": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "594": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "596": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "597": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP1",
      "path": "1"
    },
    "598": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP4",
      "path": "1"
    },
    "599": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "SUB",
      "path": "1"
    },
    "600": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP2",
      "path": "1"
    },
    "601": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "603": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP7",
      "path": "1"
    },
    "604": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "GAS",
      "path": "1"
    },
    "605": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "CALL",
      "path": "1"
    },
    "606": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "607": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "POP",
      "path": "1"
    },
    "608": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "POP",
      "path": "1"
    },
    "609": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "610": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP1",
      "path": "1"
    },
    "611": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "613": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP2",
      "path": "1"
    },
    "614": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "EQ",
      "path": "1"
    },
    "615": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28C"
    },
    "618": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "619": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "621": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "622": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "623": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "POP",
      "path": "1"
    },
    "624": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "626": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "NOT",
      "path": "1"
    },
    "627": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "629": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "630": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "ADD",
      "path": "1"
    },
    "631": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "AND",
      "path": "1"
    },
    "632": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP3",
      "path": "1"
    },
    "633": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "ADD",
      "path": "1"
    },
    "634": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "636": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "637": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "638": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP3",
      "path": "1"
    },
    "639": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "640": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "641": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "643": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "645": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "DUP5",
      "path": "1"
    },
    "646": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "ADD",
      "path": "1"
    },
    "647": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "648": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x291"
    },
    "651": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "JUMP",
      "path": "1"
    },
    "652": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "653": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "655": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "656": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "POP",
      "path": "1"
    },
    "657": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "658": {
      "fn": "Multicall2.aggregate",
      "offset": [
        767,
        836
      ],
      "op": "POP",
      "path": "1"
    },
    "659": {
      "fn": "Multicall2.aggregate",
      "offset": [
        732,
        836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "660": {
      "fn": "Multicall2.aggregate",
      "offset": [
        732,
        836
      ],
      "op": "POP",
      "path": "1"
    },
    "661": {
      "fn": "Multicall2.aggregate",
      "offset": [
        732,
        836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "662": {
      "fn": "Multicall2.aggregate",
      "offset": [
        732,
        836
      ],
      "op": "POP",
      "path": "1"
    },
    "663": {
      "branch": 21,
      "fn": "Multicall2.aggregate",
      "offset": [
        858,
        865
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 9
    },
    "664": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E8"
    },
    "667": {
      "branch": 21,
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "668": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "670": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "671": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "DUP2",
      "path": "1"
    },
    "679": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "682": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "684": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "DUP3",
      "path": "1"
    },
    "685": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "ADD",
      "path": "1"
    },
    "686": {
      "op": "DUP2"
    },
    "687": {
      "op": "SWAP1"
    },
    "688": {
      "op": "MSTORE"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "691": {
      "op": "DUP3"
    },
    "692": {
      "op": "ADD"
    },
    "693": {
      "op": "MSTORE"
    },
    "694": {
      "op": "PUSH32",
      "value": "0x4D756C746963616C6C206167677265676174653A2063616C6C206661696C6564"
    },
    "727": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "729": {
      "op": "DUP3"
    },
    "730": {
      "op": "ADD"
    },
    "731": {
      "op": "MSTORE"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "734": {
      "op": "ADD"
    },
    "735": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "736": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "738": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "739": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "DUP1",
      "path": "1"
    },
    "740": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "741": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "SUB",
      "path": "1"
    },
    "742": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "743": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "744": {
      "fn": "Multicall2.aggregate",
      "offset": [
        850,
        902
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "745": {
      "fn": "Multicall2.aggregate",
      "offset": [
        932,
        935
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 10
    },
    "746": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        926
      ],
      "op": "DUP5",
      "path": "1"
    },
    "747": {
      "fn": "Multicall2.aggregate",
      "offset": [
        927,
        928
      ],
      "op": "DUP5",
      "path": "1"
    },
    "748": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "DUP2",
      "path": "1"
    },
    "749": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "750": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "DUP2",
      "path": "1"
    },
    "751": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "LT",
      "path": "1"
    },
    "752": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FB"
    },
    "755": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "756": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FB"
    },
    "759": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x920"
    },
    "762": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        916,
        929
      ],
      "op": "JUMP",
      "path": "1"
    },
    "763": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "764": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "766": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "MUL",
      "path": "1"
    },
    "767": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "769": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "ADD",
      "path": "1"
    },
    "770": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        929
      ],
      "op": "ADD",
      "path": "1"
    },
    "771": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "772": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        935
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "773": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "774": {
      "fn": "Multicall2.aggregate",
      "offset": [
        916,
        935
      ],
      "op": "POP",
      "path": "1"
    },
    "775": {
      "fn": "Multicall2.aggregate",
      "offset": [
        718,
        946
      ],
      "op": "POP",
      "path": "1"
    },
    "776": {
      "fn": "Multicall2.aggregate",
      "offset": [
        718,
        946
      ],
      "op": "POP",
      "path": "1"
    },
    "777": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 11
    },
    "778": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "DUP1",
      "path": "1"
    },
    "779": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x313"
    },
    "782": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "783": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x968"
    },
    "786": {
      "fn": "Multicall2.aggregate",
      "jump": "i",
      "offset": [
        713,
        716
      ],
      "op": "JUMP",
      "path": "1"
    },
    "787": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "788": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "789": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "POP",
      "path": "1"
    },
    "790": {
      "fn": "Multicall2.aggregate",
      "offset": [
        713,
        716
      ],
      "op": "POP",
      "path": "1"
    },
    "791": {
      "fn": "Multicall2.aggregate",
      "offset": [
        675,
        946
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F1"
    },
    "794": {
      "fn": "Multicall2.aggregate",
      "offset": [
        675,
        946
      ],
      "op": "JUMP",
      "path": "1"
    },
    "795": {
      "fn": "Multicall2.aggregate",
      "offset": [
        675,
        946
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "796": {
      "fn": "Multicall2.aggregate",
      "offset": [
        675,
        946
      ],
      "op": "POP",
      "path": "1"
    },
    "797": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "798": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "POP",
      "path": "1"
    },
    "799": {
      "fn": "Multicall2.aggregate",
      "offset": [
        457,
        952
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "800": {
      "fn": "Multicall2.aggregate",
      "jump": "o",
      "offset": [
        457,
        952
      ],
      "op": "JUMP",
      "path": "1"
    },
    "801": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2246,
        2370
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "802": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2295,
        2312
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "804": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2346,
        2362
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x32E"
    },
    "807": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2361,
        2362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "809": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2346,
        2358
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "810": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2346,
        2362
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x983"
    },
    "813": {
      "fn": "Multicall2.getLastBlockHash",
      "jump": "i",
      "offset": [
        2346,
        2362
      ],
      "op": "JUMP",
      "path": "1"
    },
    "814": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2346,
        2362
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "815": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2336,
        2363
      ],
      "op": "BLOCKHASH",
      "path": "1"
    },
    "816": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2324,
        2363
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "817": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2324,
        2363
      ],
      "op": "POP",
      "path": "1"
    },
    "818": {
      "fn": "Multicall2.getLastBlockHash",
      "offset": [
        2246,
        2370
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "819": {
      "fn": "Multicall2.getLastBlockHash",
      "jump": "o",
      "offset": [
        2246,
        2370
      ],
      "op": "JUMP",
      "path": "1"
    },
    "820": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "821": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3164,
        3176
      ],
      "op": "NUMBER",
      "path": "1",
      "statement": 13
    },
    "822": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3198,
        3221
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 14
    },
    "823": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3198,
        3221
      ],
      "op": "BLOCKHASH",
      "path": "1"
    },
    "824": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3099,
        3125
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "826": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3244,
        3279
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 15,
      "value": "0x343"
    },
    "829": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3257,
        3271
      ],
      "op": "DUP6",
      "path": "1"
    },
    "830": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3273,
        3278
      ],
      "op": "DUP6",
      "path": "1"
    },
    "831": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3244,
        3256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34C"
    },
    "834": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "jump": "i",
      "offset": [
        3244,
        3279
      ],
      "op": "JUMP",
      "path": "1"
    },
    "835": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3244,
        3279
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "836": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3231,
        3279
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "837": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        3231,
        3279
      ],
      "op": "POP",
      "path": "1"
    },
    "838": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "839": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "POP",
      "path": "1"
    },
    "840": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "841": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "POP",
      "path": "1"
    },
    "842": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "offset": [
        2918,
        3286
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "843": {
      "fn": "Multicall2.tryBlockAndAggregate",
      "jump": "o",
      "offset": [
        2918,
        3286
      ],
      "op": "JUMP",
      "path": "1"
    },
    "844": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "845": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2472,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "847": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2540,
        2545
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 16
    },
    "848": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2540,
        2552
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "849": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "858": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP2",
      "path": "1"
    },
    "859": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "GT",
      "path": "1"
    },
    "860": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "861": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x368"
    },
    "864": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "865": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x368"
    },
    "868": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x523"
    },
    "871": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2527,
        2553
      ],
      "op": "JUMP",
      "path": "1"
    },
    "872": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "873": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "875": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "876": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "877": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP1",
      "path": "1"
    },
    "878": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP3",
      "path": "1"
    },
    "879": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "880": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP1",
      "path": "1"
    },
    "881": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "883": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "MUL",
      "path": "1"
    },
    "884": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "886": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "ADD",
      "path": "1"
    },
    "887": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP3",
      "path": "1"
    },
    "888": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "ADD",
      "path": "1"
    },
    "889": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "891": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "892": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP1",
      "path": "1"
    },
    "893": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "894": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3AE"
    },
    "897": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "898": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP2",
      "path": "1"
    },
    "899": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "901": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "ADD",
      "path": "1"
    },
    "902": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "905": {
      "op": "DUP1"
    },
    "906": {
      "op": "MLOAD"
    },
    "907": {
      "op": "DUP1"
    },
    "908": {
      "op": "DUP3"
    },
    "909": {
      "op": "ADD"
    },
    "910": {
      "op": "SWAP1"
    },
    "911": {
      "op": "SWAP2"
    },
    "912": {
      "op": "MSTORE"
    },
    "913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "915": {
      "op": "DUP2"
    },
    "916": {
      "op": "MSTORE"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "921": {
      "op": "DUP3"
    },
    "922": {
      "op": "ADD"
    },
    "923": {
      "op": "MSTORE"
    },
    "924": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP2",
      "path": "1"
    },
    "925": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "926": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "928": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "ADD",
      "path": "1"
    },
    "929": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "930": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "932": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "933": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "SUB",
      "path": "1"
    },
    "934": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "935": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "DUP2",
      "path": "1"
    },
    "936": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x386"
    },
    "939": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "940": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "941": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "POP",
      "path": "1"
    },
    "942": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "943": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2527,
        2553
      ],
      "op": "POP",
      "path": "1"
    },
    "944": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2514,
        2553
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "945": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2514,
        2553
      ],
      "op": "POP",
      "path": "1"
    },
    "946": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2568,
        2577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "948": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2563,
        2906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "949": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2587,
        2592
      ],
      "op": "DUP3",
      "path": "1"
    },
    "950": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2587,
        2599
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "951": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2583,
        2584
      ],
      "op": "DUP2",
      "path": "1"
    },
    "952": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2583,
        2599
      ],
      "op": "LT",
      "path": "1"
    },
    "953": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2563,
        2906
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "954": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2563,
        2906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FF"
    },
    "957": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2563,
        2906
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "958": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2621,
        2633
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "960": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2635,
        2651
      ],
      "op": "DUP1",
      "path": "1"
    },
    "961": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2660
      ],
      "op": "DUP5",
      "path": "1"
    },
    "962": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2661,
        2662
      ],
      "op": "DUP4",
      "path": "1"
    },
    "963": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "964": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "965": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "966": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "LT",
      "path": "1"
    },
    "967": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D2"
    },
    "970": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "971": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D2"
    },
    "974": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x920"
    },
    "977": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2655,
        2663
      ],
      "op": "JUMP",
      "path": "1"
    },
    "978": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "979": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "981": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "MUL",
      "path": "1"
    },
    "982": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "984": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "ADD",
      "path": "1"
    },
    "985": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "ADD",
      "path": "1"
    },
    "986": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2663
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "987": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2670
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "989": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2670
      ],
      "op": "ADD",
      "path": "1"
    },
    "990": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2670
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "997": {
      "op": "SHL"
    },
    "998": {
      "op": "SUB"
    },
    "999": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2675
      ],
      "op": "AND",
      "path": "1"
    },
    "1000": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2698
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1001": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2699,
        2700
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1002": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1003": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1004": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1005": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "LT",
      "path": "1"
    },
    "1006": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F9"
    },
    "1009": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1010": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F9"
    },
    "1013": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x920"
    },
    "1016": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2693,
        2701
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1017": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1018": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1020": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "MUL",
      "path": "1"
    },
    "1021": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1023": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "ADD",
      "path": "1"
    },
    "1024": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "ADD",
      "path": "1"
    },
    "1025": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2701
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1026": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1028": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2710
      ],
      "op": "ADD",
      "path": "1"
    },
    "1029": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2693,
        2710
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1030": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1032": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1033": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x412"
    },
    "1036": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1037": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1038": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x936"
    },
    "1041": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2655,
        2724
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1042": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1043": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1045": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1047": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1048": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1049": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1050": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "SUB",
      "path": "1"
    },
    "1051": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1052": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1054": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1055": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "GAS",
      "path": "1"
    },
    "1056": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "CALL",
      "path": "1"
    },
    "1057": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1058": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "1059": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "1060": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1061": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1062": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1064": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1065": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "EQ",
      "path": "1"
    },
    "1066": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x44F"
    },
    "1069": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1070": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1072": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1073": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1074": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "1075": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1077": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "NOT",
      "path": "1"
    },
    "1078": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "1080": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1081": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "ADD",
      "path": "1"
    },
    "1082": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "AND",
      "path": "1"
    },
    "1083": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1084": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "ADD",
      "path": "1"
    },
    "1085": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1087": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1088": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1089": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1090": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1091": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1092": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1094": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1096": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1097": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "ADD",
      "path": "1"
    },
    "1098": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1099": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x454"
    },
    "1102": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1103": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1104": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1106": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1107": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "1108": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1109": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2655,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "1110": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2620,
        2724
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1111": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2620,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "1112": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2620,
        2724
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1113": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2620,
        2724
      ],
      "op": "POP",
      "path": "1"
    },
    "1114": {
      "branch": 22,
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2743,
        2757
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1115": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2739,
        2845
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1116": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2739,
        2845
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B6"
    },
    "1119": {
      "branch": 22,
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2739,
        2845
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1120": {
      "branch": 23,
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2785,
        2792
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 17
    },
    "1121": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B6"
    },
    "1124": {
      "branch": 23,
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1125": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1127": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1128": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1134": {
      "op": "SHL"
    },
    "1135": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1136": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1139": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1141": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1142": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "ADD",
      "path": "1"
    },
    "1143": {
      "op": "MSTORE"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH32",
      "value": "0x4D756C746963616C6C32206167677265676174653A2063616C6C206661696C65"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1196": {
      "op": "DUP3"
    },
    "1197": {
      "op": "ADD"
    },
    "1198": {
      "op": "MSTORE"
    },
    "1199": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1201": {
      "op": "ADD"
    },
    "1202": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF"
    },
    "1205": {
      "op": "JUMP"
    },
    "1206": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2777,
        2830
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1207": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x40"
    },
    "1209": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1210": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1211": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1213": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "ADD",
      "path": "1"
    },
    "1214": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1216": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1217": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1218": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2882,
        2889
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1219": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1220": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1221": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1222": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1223": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1225": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "ADD",
      "path": "1"
    },
    "1226": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2891,
        2894
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1227": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1228": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1229": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2875,
        2895
      ],
      "op": "POP",
      "path": "1"
    },
    "1230": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2869
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1231": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2870,
        2871
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1232": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1233": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1234": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1235": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "LT",
      "path": "1"
    },
    "1236": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DF"
    },
    "1239": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1240": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DF"
    },
    "1243": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x920"
    },
    "1246": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2859,
        2872
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1247": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1248": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1250": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "MUL",
      "path": "1"
    },
    "1251": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1253": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "ADD",
      "path": "1"
    },
    "1254": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2872
      ],
      "op": "ADD",
      "path": "1"
    },
    "1255": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2895
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1256": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1257": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2895
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1258": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2859,
        2895
      ],
      "op": "POP",
      "path": "1"
    },
    "1259": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2606,
        2906
      ],
      "op": "POP",
      "path": "1"
    },
    "1260": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2606,
        2906
      ],
      "op": "POP",
      "path": "1"
    },
    "1261": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 19
    },
    "1262": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1263": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F7"
    },
    "1266": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1267": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x968"
    },
    "1270": {
      "fn": "Multicall2.tryAggregate",
      "jump": "i",
      "offset": [
        2601,
        2604
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1271": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1272": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1273": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "POP",
      "path": "1"
    },
    "1274": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2601,
        2604
      ],
      "op": "POP",
      "path": "1"
    },
    "1275": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2563,
        2906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B4"
    },
    "1278": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2563,
        2906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1279": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2563,
        2906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1280": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2563,
        2906
      ],
      "op": "POP",
      "path": "1"
    },
    "1281": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1282": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1283": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "POP",
      "path": "1"
    },
    "1284": {
      "fn": "Multicall2.tryAggregate",
      "offset": [
        2376,
        2912
      ],
      "op": "POP",
      "path": "1"
    },
    "1285": {
      "fn": "Multicall2.tryAggregate",
      "jump": "o",
      "offset": [
        2376,
        2912
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1286": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1287": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1051,
        1070
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1289": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1084,
        1101
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1290": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1115,
        1141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1292": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1205,
        1272
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 20,
      "value": "0x516"
    },
    "1295": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1239,
        1243
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1297": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1257,
        1262
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1298": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1205,
        1225
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x334"
    },
    "1301": {
      "fn": "Multicall2.blockAndAggregate",
      "jump": "i",
      "offset": [
        1205,
        1272
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1302": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1205,
        1272
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1303": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1166,
        1272
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1304": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1166,
        1272
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "1305": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1166,
        1272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1306": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1166,
        1272
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1166,
        1272
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1309": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        1166,
        1272
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1310": {
      "op": "POP"
    },
    "1311": {
      "fn": "Multicall2.blockAndAggregate",
      "offset": [
        958,
        1279
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "op": "POP"
    },
    "1314": {
      "fn": "Multicall2.blockAndAggregate",
      "jump": "o",
      "offset": [
        958,
        1279
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1315": {
      "op": "JUMPDEST"
    },
    "1316": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1326": {
      "op": "MSTORE"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1331": {
      "op": "MSTORE"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1336": {
      "op": "REVERT"
    },
    "1337": {
      "op": "JUMPDEST"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1340": {
      "op": "DUP1"
    },
    "1341": {
      "op": "MLOAD"
    },
    "1342": {
      "op": "SWAP1"
    },
    "1343": {
      "op": "DUP2"
    },
    "1344": {
      "op": "ADD"
    },
    "1345": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1354": {
      "op": "DUP2"
    },
    "1355": {
      "op": "GT"
    },
    "1356": {
      "op": "DUP3"
    },
    "1357": {
      "op": "DUP3"
    },
    "1358": {
      "op": "LT"
    },
    "1359": {
      "op": "OR"
    },
    "1360": {
      "op": "ISZERO"
    },
    "1361": {
      "op": "PUSH2",
      "value": "0x55C"
    },
    "1364": {
      "op": "JUMPI"
    },
    "1365": {
      "op": "PUSH2",
      "value": "0x55C"
    },
    "1368": {
      "op": "PUSH2",
      "value": "0x523"
    },
    "1371": {
      "jump": "i",
      "op": "JUMP"
    },
    "1372": {
      "op": "JUMPDEST"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1375": {
      "op": "MSTORE"
    },
    "1376": {
      "op": "SWAP1"
    },
    "1377": {
      "jump": "o",
      "op": "JUMP"
    },
    "1378": {
      "op": "JUMPDEST"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1381": {
      "op": "MLOAD"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1384": {
      "op": "DUP3"
    },
    "1385": {
      "op": "ADD"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1388": {
      "op": "NOT"
    },
    "1389": {
      "op": "AND"
    },
    "1390": {
      "op": "DUP2"
    },
    "1391": {
      "op": "ADD"
    },
    "1392": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1401": {
      "op": "DUP2"
    },
    "1402": {
      "op": "GT"
    },
    "1403": {
      "op": "DUP3"
    },
    "1404": {
      "op": "DUP3"
    },
    "1405": {
      "op": "LT"
    },
    "1406": {
      "op": "OR"
    },
    "1407": {
      "op": "ISZERO"
    },
    "1408": {
      "op": "PUSH2",
      "value": "0x58B"
    },
    "1411": {
      "op": "JUMPI"
    },
    "1412": {
      "op": "PUSH2",
      "value": "0x58B"
    },
    "1415": {
      "op": "PUSH2",
      "value": "0x523"
    },
    "1418": {
      "jump": "i",
      "op": "JUMP"
    },
    "1419": {
      "op": "JUMPDEST"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1422": {
      "op": "MSTORE"
    },
    "1423": {
      "op": "SWAP2"
    },
    "1424": {
      "op": "SWAP1"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "jump": "o",
      "op": "JUMP"
    },
    "1427": {
      "op": "JUMPDEST"
    },
    "1428": {
      "op": "DUP1"
    },
    "1429": {
      "op": "CALLDATALOAD"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "op": "SUB"
    },
    "1438": {
      "op": "DUP2"
    },
    "1439": {
      "op": "AND"
    },
    "1440": {
      "op": "DUP2"
    },
    "1441": {
      "op": "EQ"
    },
    "1442": {
      "op": "PUSH2",
      "value": "0x5AA"
    },
    "1445": {
      "op": "JUMPI"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1448": {
      "op": "DUP1"
    },
    "1449": {
      "op": "REVERT"
    },
    "1450": {
      "op": "JUMPDEST"
    },
    "1451": {
      "op": "SWAP2"
    },
    "1452": {
      "op": "SWAP1"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "jump": "o",
      "op": "JUMP"
    },
    "1455": {
      "op": "JUMPDEST"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1460": {
      "op": "DUP4"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "DUP5"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "op": "SLT"
    },
    "1465": {
      "op": "PUSH2",
      "value": "0x5C1"
    },
    "1468": {
      "op": "JUMPI"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1471": {
      "op": "DUP1"
    },
    "1472": {
      "op": "REVERT"
    },
    "1473": {
      "op": "JUMPDEST"
    },
    "1474": {
      "op": "DUP3"
    },
    "1475": {
      "op": "CALLDATALOAD"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1478": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1487": {
      "op": "DUP1"
    },
    "1488": {
      "op": "DUP4"
    },
    "1489": {
      "op": "GT"
    },
    "1490": {
      "op": "ISZERO"
    },
    "1491": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1494": {
      "op": "JUMPI"
    },
    "1495": {
      "op": "PUSH2",
      "value": "0x5DE"
    },
    "1498": {
      "op": "PUSH2",
      "value": "0x523"
    },
    "1501": {
      "jump": "i",
      "op": "JUMP"
    },
    "1502": {
      "op": "JUMPDEST"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1506": {
      "op": "SHL"
    },
    "1507": {
      "op": "PUSH2",
      "value": "0x5ED"
    },
    "1510": {
      "op": "DUP4"
    },
    "1511": {
      "op": "DUP3"
    },
    "1512": {
      "op": "ADD"
    },
    "1513": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1516": {
      "jump": "i",
      "op": "JUMP"
    },
    "1517": {
      "op": "JUMPDEST"
    },
    "1518": {
      "op": "SWAP4"
    },
    "1519": {
      "op": "DUP5"
    },
    "1520": {
      "op": "MSTORE"
    },
    "1521": {
      "op": "DUP7"
    },
    "1522": {
      "op": "DUP2"
    },
    "1523": {
      "op": "ADD"
    },
    "1524": {
      "op": "DUP4"
    },
    "1525": {
      "op": "ADD"
    },
    "1526": {
      "op": "SWAP4"
    },
    "1527": {
      "op": "DUP4"
    },
    "1528": {
      "op": "DUP2"
    },
    "1529": {
      "op": "ADD"
    },
    "1530": {
      "op": "SWAP1"
    },
    "1531": {
      "op": "DUP10"
    },
    "1532": {
      "op": "DUP7"
    },
    "1533": {
      "op": "GT"
    },
    "1534": {
      "op": "ISZERO"
    },
    "1535": {
      "op": "PUSH2",
      "value": "0x607"
    },
    "1538": {
      "op": "JUMPI"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1541": {
      "op": "DUP1"
    },
    "1542": {
      "op": "REVERT"
    },
    "1543": {
      "op": "JUMPDEST"
    },
    "1544": {
      "op": "DUP5"
    },
    "1545": {
      "op": "DUP10"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "SWAP3"
    },
    "1548": {
      "op": "POP"
    },
    "1549": {
      "op": "JUMPDEST"
    },
    "1550": {
      "op": "DUP6"
    },
    "1551": {
      "op": "DUP4"
    },
    "1552": {
      "op": "LT"
    },
    "1553": {
      "op": "ISZERO"
    },
    "1554": {
      "op": "PUSH2",
      "value": "0x6DD"
    },
    "1557": {
      "op": "JUMPI"
    },
    "1558": {
      "op": "DUP3"
    },
    "1559": {
      "op": "CALLDATALOAD"
    },
    "1560": {
      "op": "DUP5"
    },
    "1561": {
      "op": "DUP2"
    },
    "1562": {
      "op": "GT"
    },
    "1563": {
      "op": "ISZERO"
    },
    "1564": {
      "op": "PUSH2",
      "value": "0x625"
    },
    "1567": {
      "op": "JUMPI"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1570": {
      "op": "DUP1"
    },
    "1571": {
      "op": "DUP2"
    },
    "1572": {
      "op": "REVERT"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "op": "DUP10"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1580": {
      "op": "NOT"
    },
    "1581": {
      "op": "DUP3"
    },
    "1582": {
      "op": "DUP14"
    },
    "1583": {
      "op": "SUB"
    },
    "1584": {
      "op": "DUP2"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "DUP3"
    },
    "1587": {
      "op": "SGT"
    },
    "1588": {
      "op": "ISZERO"
    },
    "1589": {
      "op": "PUSH2",
      "value": "0x63E"
    },
    "1592": {
      "op": "JUMPI"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1595": {
      "op": "DUP1"
    },
    "1596": {
      "op": "DUP2"
    },
    "1597": {
      "op": "REVERT"
    },
    "1598": {
      "op": "JUMPDEST"
    },
    "1599": {
      "op": "PUSH2",
      "value": "0x646"
    },
    "1602": {
      "op": "PUSH2",
      "value": "0x539"
    },
    "1605": {
      "jump": "i",
      "op": "JUMP"
    },
    "1606": {
      "op": "JUMPDEST"
    },
    "1607": {
      "op": "PUSH2",
      "value": "0x651"
    },
    "1610": {
      "op": "DUP10"
    },
    "1611": {
      "op": "DUP6"
    },
    "1612": {
      "op": "ADD"
    },
    "1613": {
      "op": "PUSH2",
      "value": "0x593"
    },
    "1616": {
      "jump": "i",
      "op": "JUMP"
    },
    "1617": {
      "op": "JUMPDEST"
    },
    "1618": {
      "op": "DUP2"
    },
    "1619": {
      "op": "MSTORE"
    },
    "1620": {
      "op": "DUP3"
    },
    "1621": {
      "op": "DUP5"
    },
    "1622": {
      "op": "ADD"
    },
    "1623": {
      "op": "CALLDATALOAD"
    },
    "1624": {
      "op": "DUP9"
    },
    "1625": {
      "op": "DUP2"
    },
    "1626": {
      "op": "GT"
    },
    "1627": {
      "op": "ISZERO"
    },
    "1628": {
      "op": "PUSH2",
      "value": "0x665"
    },
    "1631": {
      "op": "JUMPI"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1634": {
      "op": "DUP1"
    },
    "1635": {
      "op": "DUP2"
    },
    "1636": {
      "op": "REVERT"
    },
    "1637": {
      "op": "JUMPDEST"
    },
    "1638": {
      "op": "DUP1"
    },
    "1639": {
      "op": "DUP6"
    },
    "1640": {
      "op": "ADD"
    },
    "1641": {
      "op": "SWAP5"
    },
    "1642": {
      "op": "POP"
    },
    "1643": {
      "op": "POP"
    },
    "1644": {
      "op": "DUP14"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1647": {
      "op": "DUP6"
    },
    "1648": {
      "op": "ADD"
    },
    "1649": {
      "op": "SLT"
    },
    "1650": {
      "op": "PUSH2",
      "value": "0x67B"
    },
    "1653": {
      "op": "JUMPI"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1656": {
      "op": "DUP1"
    },
    "1657": {
      "op": "DUP2"
    },
    "1658": {
      "op": "REVERT"
    },
    "1659": {
      "op": "JUMPDEST"
    },
    "1660": {
      "op": "DUP9"
    },
    "1661": {
      "op": "DUP5"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "op": "CALLDATALOAD"
    },
    "1664": {
      "op": "DUP9"
    },
    "1665": {
      "op": "DUP2"
    },
    "1666": {
      "op": "GT"
    },
    "1667": {
      "op": "ISZERO"
    },
    "1668": {
      "op": "PUSH2",
      "value": "0x68F"
    },
    "1671": {
      "op": "JUMPI"
    },
    "1672": {
      "op": "PUSH2",
      "value": "0x68F"
    },
    "1675": {
      "op": "PUSH2",
      "value": "0x523"
    },
    "1678": {
      "jump": "i",
      "op": "JUMP"
    },
    "1679": {
      "op": "JUMPDEST"
    },
    "1680": {
      "op": "PUSH2",
      "value": "0x69E"
    },
    "1683": {
      "op": "DUP11"
    },
    "1684": {
      "op": "DUP5"
    },
    "1685": {
      "op": "DUP15"
    },
    "1686": {
      "op": "DUP5"
    },
    "1687": {
      "op": "ADD"
    },
    "1688": {
      "op": "AND"
    },
    "1689": {
      "op": "ADD"
    },
    "1690": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1693": {
      "jump": "i",
      "op": "JUMP"
    },
    "1694": {
      "op": "JUMPDEST"
    },
    "1695": {
      "op": "SWAP3"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "op": "DUP1"
    },
    "1698": {
      "op": "DUP4"
    },
    "1699": {
      "op": "MSTORE"
    },
    "1700": {
      "op": "DUP15"
    },
    "1701": {
      "op": "DUP5"
    },
    "1702": {
      "op": "DUP3"
    },
    "1703": {
      "op": "DUP8"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "op": "ADD"
    },
    "1706": {
      "op": "GT"
    },
    "1707": {
      "op": "ISZERO"
    },
    "1708": {
      "op": "PUSH2",
      "value": "0x6B5"
    },
    "1711": {
      "op": "JUMPI"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1714": {
      "op": "DUP1"
    },
    "1715": {
      "op": "DUP2"
    },
    "1716": {
      "op": "REVERT"
    },
    "1717": {
      "op": "JUMPDEST"
    },
    "1718": {
      "op": "DUP1"
    },
    "1719": {
      "op": "DUP5"
    },
    "1720": {
      "op": "DUP7"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "DUP12"
    },
    "1723": {
      "op": "DUP6"
    },
    "1724": {
      "op": "ADD"
    },
    "1725": {
      "op": "CALLDATACOPY"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1728": {
      "op": "SWAP1"
    },
    "1729": {
      "op": "DUP4"
    },
    "1730": {
      "op": "ADD"
    },
    "1731": {
      "op": "DUP11"
    },
    "1732": {
      "op": "ADD"
    },
    "1733": {
      "op": "MSTORE"
    },
    "1734": {
      "op": "DUP1"
    },
    "1735": {
      "op": "DUP10"
    },
    "1736": {
      "op": "ADD"
    },
    "1737": {
      "op": "SWAP2"
    },
    "1738": {
      "op": "SWAP1"
    },
    "1739": {
      "op": "SWAP2"
    },
    "1740": {
      "op": "MSTORE"
    },
    "1741": {
      "op": "DUP5"
    },
    "1742": {
      "op": "MSTORE"
    },
    "1743": {
      "op": "POP"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "op": "SWAP2"
    },
    "1746": {
      "op": "DUP5"
    },
    "1747": {
      "op": "ADD"
    },
    "1748": {
      "op": "SWAP2"
    },
    "1749": {
      "op": "SWAP1"
    },
    "1750": {
      "op": "DUP5"
    },
    "1751": {
      "op": "ADD"
    },
    "1752": {
      "op": "SWAP1"
    },
    "1753": {
      "op": "PUSH2",
      "value": "0x60D"
    },
    "1756": {
      "op": "JUMP"
    },
    "1757": {
      "op": "JUMPDEST"
    },
    "1758": {
      "op": "SWAP10"
    },
    "1759": {
      "op": "SWAP9"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "op": "POP"
    },
    "1764": {
      "op": "POP"
    },
    "1765": {
      "op": "POP"
    },
    "1766": {
      "op": "POP"
    },
    "1767": {
      "op": "POP"
    },
    "1768": {
      "op": "POP"
    },
    "1769": {
      "jump": "o",
      "op": "JUMP"
    },
    "1770": {
      "op": "JUMPDEST"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1775": {
      "op": "DUP3"
    },
    "1776": {
      "op": "DUP5"
    },
    "1777": {
      "op": "SUB"
    },
    "1778": {
      "op": "SLT"
    },
    "1779": {
      "op": "ISZERO"
    },
    "1780": {
      "op": "PUSH2",
      "value": "0x6FC"
    },
    "1783": {
      "op": "JUMPI"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1786": {
      "op": "DUP1"
    },
    "1787": {
      "op": "REVERT"
    },
    "1788": {
      "op": "JUMPDEST"
    },
    "1789": {
      "op": "DUP2"
    },
    "1790": {
      "op": "CALLDATALOAD"
    },
    "1791": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1800": {
      "op": "DUP2"
    },
    "1801": {
      "op": "GT"
    },
    "1802": {
      "op": "ISZERO"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "1806": {
      "op": "JUMPI"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1809": {
      "op": "DUP1"
    },
    "1810": {
      "op": "REVERT"
    },
    "1811": {
      "op": "JUMPDEST"
    },
    "1812": {
      "op": "PUSH2",
      "value": "0x71F"
    },
    "1815": {
      "op": "DUP5"
    },
    "1816": {
      "op": "DUP3"
    },
    "1817": {
      "op": "DUP6"
    },
    "1818": {
      "op": "ADD"
    },
    "1819": {
      "op": "PUSH2",
      "value": "0x5AF"
    },
    "1822": {
      "jump": "i",
      "op": "JUMP"
    },
    "1823": {
      "op": "JUMPDEST"
    },
    "1824": {
      "op": "SWAP5"
    },
    "1825": {
      "op": "SWAP4"
    },
    "1826": {
      "op": "POP"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "op": "POP"
    },
    "1829": {
      "op": "POP"
    },
    "1830": {
      "jump": "o",
      "op": "JUMP"
    },
    "1831": {
      "op": "JUMPDEST"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1834": {
      "op": "JUMPDEST"
    },
    "1835": {
      "op": "DUP4"
    },
    "1836": {
      "op": "DUP2"
    },
    "1837": {
      "op": "LT"
    },
    "1838": {
      "op": "ISZERO"
    },
    "1839": {
      "op": "PUSH2",
      "value": "0x742"
    },
    "1842": {
      "op": "JUMPI"
    },
    "1843": {
      "op": "DUP2"
    },
    "1844": {
      "op": "DUP2"
    },
    "1845": {
      "op": "ADD"
    },
    "1846": {
      "op": "MLOAD"
    },
    "1847": {
      "op": "DUP4"
    },
    "1848": {
      "op": "DUP3"
    },
    "1849": {
      "op": "ADD"
    },
    "1850": {
      "op": "MSTORE"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1853": {
      "op": "ADD"
    },
    "1854": {
      "op": "PUSH2",
      "value": "0x72A"
    },
    "1857": {
      "op": "JUMP"
    },
    "1858": {
      "op": "JUMPDEST"
    },
    "1859": {
      "op": "DUP4"
    },
    "1860": {
      "op": "DUP2"
    },
    "1861": {
      "op": "GT"
    },
    "1862": {
      "op": "ISZERO"
    },
    "1863": {
      "op": "PUSH2",
      "value": "0x751"
    },
    "1866": {
      "op": "JUMPI"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1869": {
      "op": "DUP5"
    },
    "1870": {
      "op": "DUP5"
    },
    "1871": {
      "op": "ADD"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "op": "JUMPDEST"
    },
    "1874": {
      "op": "POP"
    },
    "1875": {
      "op": "POP"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "POP"
    },
    "1878": {
      "jump": "o",
      "op": "JUMP"
    },
    "1879": {
      "op": "JUMPDEST"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1882": {
      "op": "DUP2"
    },
    "1883": {
      "op": "MLOAD"
    },
    "1884": {
      "op": "DUP1"
    },
    "1885": {
      "op": "DUP5"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "op": "PUSH2",
      "value": "0x76F"
    },
    "1890": {
      "op": "DUP2"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1893": {
      "op": "DUP7"
    },
    "1894": {
      "op": "ADD"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1897": {
      "op": "DUP7"
    },
    "1898": {
      "op": "ADD"
    },
    "1899": {
      "op": "PUSH2",
      "value": "0x727"
    },
    "1902": {
      "jump": "i",
      "op": "JUMP"
    },
    "1903": {
      "op": "JUMPDEST"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1909": {
      "op": "NOT"
    },
    "1910": {
      "op": "AND"
    },
    "1911": {
      "op": "SWAP3"
    },
    "1912": {
      "op": "SWAP1"
    },
    "1913": {
      "op": "SWAP3"
    },
    "1914": {
      "op": "ADD"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1917": {
      "op": "ADD"
    },
    "1918": {
      "op": "SWAP3"
    },
    "1919": {
      "op": "SWAP2"
    },
    "1920": {
      "op": "POP"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "jump": "o",
      "op": "JUMP"
    },
    "1923": {
      "op": "JUMPDEST"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1928": {
      "op": "DUP3"
    },
    "1929": {
      "op": "ADD"
    },
    "1930": {
      "op": "DUP5"
    },
    "1931": {
      "op": "DUP4"
    },
    "1932": {
      "op": "MSTORE"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1937": {
      "op": "DUP2"
    },
    "1938": {
      "op": "DUP6"
    },
    "1939": {
      "op": "ADD"
    },
    "1940": {
      "op": "MSTORE"
    },
    "1941": {
      "op": "DUP2"
    },
    "1942": {
      "op": "DUP6"
    },
    "1943": {
      "op": "MLOAD"
    },
    "1944": {
      "op": "DUP1"
    },
    "1945": {
      "op": "DUP5"
    },
    "1946": {
      "op": "MSTORE"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1949": {
      "op": "DUP7"
    },
    "1950": {
      "op": "ADD"
    },
    "1951": {
      "op": "SWAP2"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1955": {
      "op": "DUP2"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "op": "DUP8"
    },
    "1960": {
      "op": "ADD"
    },
    "1961": {
      "op": "ADD"
    },
    "1962": {
      "op": "SWAP4"
    },
    "1963": {
      "op": "POP"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "DUP8"
    },
    "1966": {
      "op": "ADD"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1969": {
      "op": "JUMPDEST"
    },
    "1970": {
      "op": "DUP3"
    },
    "1971": {
      "op": "DUP2"
    },
    "1972": {
      "op": "LT"
    },
    "1973": {
      "op": "ISZERO"
    },
    "1974": {
      "op": "PUSH2",
      "value": "0x7DF"
    },
    "1977": {
      "op": "JUMPI"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "1980": {
      "op": "NOT"
    },
    "1981": {
      "op": "DUP9"
    },
    "1982": {
      "op": "DUP8"
    },
    "1983": {
      "op": "SUB"
    },
    "1984": {
      "op": "ADD"
    },
    "1985": {
      "op": "DUP5"
    },
    "1986": {
      "op": "MSTORE"
    },
    "1987": {
      "op": "PUSH2",
      "value": "0x7CD"
    },
    "1990": {
      "op": "DUP7"
    },
    "1991": {
      "op": "DUP4"
    },
    "1992": {
      "op": "MLOAD"
    },
    "1993": {
      "op": "PUSH2",
      "value": "0x757"
    },
    "1996": {
      "jump": "i",
      "op": "JUMP"
    },
    "1997": {
      "op": "JUMPDEST"
    },
    "1998": {
      "op": "SWAP6"
    },
    "1999": {
      "op": "POP"
    },
    "2000": {
      "op": "SWAP3"
    },
    "2001": {
      "op": "DUP5"
    },
    "2002": {
      "op": "ADD"
    },
    "2003": {
      "op": "SWAP3"
    },
    "2004": {
      "op": "SWAP1"
    },
    "2005": {
      "op": "DUP5"
    },
    "2006": {
      "op": "ADD"
    },
    "2007": {
      "op": "SWAP1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2010": {
      "op": "ADD"
    },
    "2011": {
      "op": "PUSH2",
      "value": "0x7B1"
    },
    "2014": {
      "op": "JUMP"
    },
    "2015": {
      "op": "JUMPDEST"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "op": "SWAP4"
    },
    "2018": {
      "op": "SWAP9"
    },
    "2019": {
      "op": "SWAP8"
    },
    "2020": {
      "op": "POP"
    },
    "2021": {
      "op": "POP"
    },
    "2022": {
      "op": "POP"
    },
    "2023": {
      "op": "POP"
    },
    "2024": {
      "op": "POP"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "jump": "o",
      "op": "JUMP"
    },
    "2029": {
      "op": "JUMPDEST"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2032": {
      "op": "DUP1"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2035": {
      "op": "DUP4"
    },
    "2036": {
      "op": "DUP6"
    },
    "2037": {
      "op": "SUB"
    },
    "2038": {
      "op": "SLT"
    },
    "2039": {
      "op": "ISZERO"
    },
    "2040": {
      "op": "PUSH2",
      "value": "0x800"
    },
    "2043": {
      "op": "JUMPI"
    },
    "2044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2046": {
      "op": "DUP1"
    },
    "2047": {
      "op": "REVERT"
    },
    "2048": {
      "op": "JUMPDEST"
    },
    "2049": {
      "op": "DUP3"
    },
    "2050": {
      "op": "CALLDATALOAD"
    },
    "2051": {
      "op": "DUP1"
    },
    "2052": {
      "op": "ISZERO"
    },
    "2053": {
      "op": "ISZERO"
    },
    "2054": {
      "op": "DUP2"
    },
    "2055": {
      "op": "EQ"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x810"
    },
    "2059": {
      "op": "JUMPI"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2062": {
      "op": "DUP1"
    },
    "2063": {
      "op": "REVERT"
    },
    "2064": {
      "op": "JUMPDEST"
    },
    "2065": {
      "op": "SWAP2"
    },
    "2066": {
      "op": "POP"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2069": {
      "op": "DUP4"
    },
    "2070": {
      "op": "ADD"
    },
    "2071": {
      "op": "CALLDATALOAD"
    },
    "2072": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2081": {
      "op": "DUP2"
    },
    "2082": {
      "op": "GT"
    },
    "2083": {
      "op": "ISZERO"
    },
    "2084": {
      "op": "PUSH2",
      "value": "0x82C"
    },
    "2087": {
      "op": "JUMPI"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2090": {
      "op": "DUP1"
    },
    "2091": {
      "op": "REVERT"
    },
    "2092": {
      "op": "JUMPDEST"
    },
    "2093": {
      "op": "PUSH2",
      "value": "0x838"
    },
    "2096": {
      "op": "DUP6"
    },
    "2097": {
      "op": "DUP3"
    },
    "2098": {
      "op": "DUP7"
    },
    "2099": {
      "op": "ADD"
    },
    "2100": {
      "op": "PUSH2",
      "value": "0x5AF"
    },
    "2103": {
      "jump": "i",
      "op": "JUMP"
    },
    "2104": {
      "op": "JUMPDEST"
    },
    "2105": {
      "op": "SWAP2"
    },
    "2106": {
      "op": "POP"
    },
    "2107": {
      "op": "POP"
    },
    "2108": {
      "op": "SWAP3"
    },
    "2109": {
      "op": "POP"
    },
    "2110": {
      "op": "SWAP3"
    },
    "2111": {
      "op": "SWAP1"
    },
    "2112": {
      "op": "POP"
    },
    "2113": {
      "jump": "o",
      "op": "JUMP"
    },
    "2114": {
      "op": "JUMPDEST"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2117": {
      "op": "DUP2"
    },
    "2118": {
      "op": "MLOAD"
    },
    "2119": {
      "op": "DUP1"
    },
    "2120": {
      "op": "DUP5"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2124": {
      "op": "DUP1"
    },
    "2125": {
      "op": "DUP6"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "SWAP5"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "op": "DUP5"
    },
    "2130": {
      "op": "DUP3"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2133": {
      "op": "SHL"
    },
    "2134": {
      "op": "DUP7"
    },
    "2135": {
      "op": "ADD"
    },
    "2136": {
      "op": "DUP3"
    },
    "2137": {
      "op": "DUP7"
    },
    "2138": {
      "op": "ADD"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2141": {
      "op": "JUMPDEST"
    },
    "2142": {
      "op": "DUP6"
    },
    "2143": {
      "op": "DUP2"
    },
    "2144": {
      "op": "LT"
    },
    "2145": {
      "op": "ISZERO"
    },
    "2146": {
      "op": "PUSH2",
      "value": "0x89D"
    },
    "2149": {
      "op": "JUMPI"
    },
    "2150": {
      "op": "DUP4"
    },
    "2151": {
      "op": "DUP4"
    },
    "2152": {
      "op": "SUB"
    },
    "2153": {
      "op": "DUP10"
    },
    "2154": {
      "op": "MSTORE"
    },
    "2155": {
      "op": "DUP2"
    },
    "2156": {
      "op": "MLOAD"
    },
    "2157": {
      "op": "DUP1"
    },
    "2158": {
      "op": "MLOAD"
    },
    "2159": {
      "op": "ISZERO"
    },
    "2160": {
      "op": "ISZERO"
    },
    "2161": {
      "op": "DUP5"
    },
    "2162": {
      "op": "MSTORE"
    },
    "2163": {
      "op": "DUP6"
    },
    "2164": {
      "op": "ADD"
    },
    "2165": {
      "op": "MLOAD"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2168": {
      "op": "DUP7"
    },
    "2169": {
      "op": "DUP6"
    },
    "2170": {
      "op": "ADD"
    },
    "2171": {
      "op": "DUP2"
    },
    "2172": {
      "op": "SWAP1"
    },
    "2173": {
      "op": "MSTORE"
    },
    "2174": {
      "op": "PUSH2",
      "value": "0x889"
    },
    "2177": {
      "op": "DUP2"
    },
    "2178": {
      "op": "DUP7"
    },
    "2179": {
      "op": "ADD"
    },
    "2180": {
      "op": "DUP4"
    },
    "2181": {
      "op": "PUSH2",
      "value": "0x757"
    },
    "2184": {
      "jump": "i",
      "op": "JUMP"
    },
    "2185": {
      "op": "JUMPDEST"
    },
    "2186": {
      "op": "SWAP11"
    },
    "2187": {
      "op": "DUP8"
    },
    "2188": {
      "op": "ADD"
    },
    "2189": {
      "op": "SWAP11"
    },
    "2190": {
      "op": "SWAP5"
    },
    "2191": {
      "op": "POP"
    },
    "2192": {
      "op": "POP"
    },
    "2193": {
      "op": "POP"
    },
    "2194": {
      "op": "SWAP1"
    },
    "2195": {
      "op": "DUP5"
    },
    "2196": {
      "op": "ADD"
    },
    "2197": {
      "op": "SWAP1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "ADD"
    },
    "2201": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "2204": {
      "op": "JUMP"
    },
    "2205": {
      "op": "JUMPDEST"
    },
    "2206": {
      "op": "POP"
    },
    "2207": {
      "op": "SWAP1"
    },
    "2208": {
      "op": "SWAP8"
    },
    "2209": {
      "op": "SWAP7"
    },
    "2210": {
      "op": "POP"
    },
    "2211": {
      "op": "POP"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "jump": "o",
      "op": "JUMP"
    },
    "2218": {
      "op": "JUMPDEST"
    },
    "2219": {
      "op": "DUP4"
    },
    "2220": {
      "op": "DUP2"
    },
    "2221": {
      "op": "MSTORE"
    },
    "2222": {
      "op": "DUP3"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2225": {
      "op": "DUP3"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "op": "MSTORE"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2232": {
      "op": "DUP3"
    },
    "2233": {
      "op": "ADD"
    },
    "2234": {
      "op": "MSTORE"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2237": {
      "op": "PUSH2",
      "value": "0x8C9"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2242": {
      "op": "DUP4"
    },
    "2243": {
      "op": "ADD"
    },
    "2244": {
      "op": "DUP5"
    },
    "2245": {
      "op": "PUSH2",
      "value": "0x842"
    },
    "2248": {
      "jump": "i",
      "op": "JUMP"
    },
    "2249": {
      "op": "JUMPDEST"
    },
    "2250": {
      "op": "SWAP6"
    },
    "2251": {
      "op": "SWAP5"
    },
    "2252": {
      "op": "POP"
    },
    "2253": {
      "op": "POP"
    },
    "2254": {
      "op": "POP"
    },
    "2255": {
      "op": "POP"
    },
    "2256": {
      "op": "POP"
    },
    "2257": {
      "jump": "o",
      "op": "JUMP"
    },
    "2258": {
      "op": "JUMPDEST"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "DUP5"
    },
    "2265": {
      "op": "SUB"
    },
    "2266": {
      "op": "SLT"
    },
    "2267": {
      "op": "ISZERO"
    },
    "2268": {
      "op": "PUSH2",
      "value": "0x8E4"
    },
    "2271": {
      "op": "JUMPI"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2274": {
      "op": "DUP1"
    },
    "2275": {
      "op": "REVERT"
    },
    "2276": {
      "op": "JUMPDEST"
    },
    "2277": {
      "op": "PUSH2",
      "value": "0x8ED"
    },
    "2280": {
      "op": "DUP3"
    },
    "2281": {
      "op": "PUSH2",
      "value": "0x593"
    },
    "2284": {
      "jump": "i",
      "op": "JUMP"
    },
    "2285": {
      "op": "JUMPDEST"
    },
    "2286": {
      "op": "SWAP4"
    },
    "2287": {
      "op": "SWAP3"
    },
    "2288": {
      "op": "POP"
    },
    "2289": {
      "op": "POP"
    },
    "2290": {
      "op": "POP"
    },
    "2291": {
      "jump": "o",
      "op": "JUMP"
    },
    "2292": {
      "op": "JUMPDEST"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2295": {
      "op": "DUP2"
    },
    "2296": {
      "op": "MSTORE"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2299": {
      "op": "PUSH2",
      "value": "0x8ED"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2304": {
      "op": "DUP4"
    },
    "2305": {
      "op": "ADD"
    },
    "2306": {
      "op": "DUP5"
    },
    "2307": {
      "op": "PUSH2",
      "value": "0x842"
    },
    "2310": {
      "jump": "i",
      "op": "JUMP"
    },
    "2311": {
      "op": "JUMPDEST"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2316": {
      "op": "DUP3"
    },
    "2317": {
      "op": "DUP5"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "op": "SLT"
    },
    "2320": {
      "op": "ISZERO"
    },
    "2321": {
      "op": "PUSH2",
      "value": "0x919"
    },
    "2324": {
      "op": "JUMPI"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2327": {
      "op": "DUP1"
    },
    "2328": {
      "op": "REVERT"
    },
    "2329": {
      "op": "JUMPDEST"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "op": "CALLDATALOAD"
    },
    "2332": {
      "op": "SWAP2"
    },
    "2333": {
      "op": "SWAP1"
    },
    "2334": {
      "op": "POP"
    },
    "2335": {
      "jump": "o",
      "op": "JUMP"
    },
    "2336": {
      "op": "JUMPDEST"
    },
    "2337": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2344": {
      "op": "SHL"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2347": {
      "op": "MSTORE"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2352": {
      "op": "MSTORE"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2357": {
      "op": "REVERT"
    },
    "2358": {
      "op": "JUMPDEST"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2361": {
      "op": "DUP3"
    },
    "2362": {
      "op": "MLOAD"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x948"
    },
    "2366": {
      "op": "DUP2"
    },
    "2367": {
      "op": "DUP5"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2370": {
      "op": "DUP8"
    },
    "2371": {
      "op": "ADD"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x727"
    },
    "2375": {
      "jump": "i",
      "op": "JUMP"
    },
    "2376": {
      "op": "JUMPDEST"
    },
    "2377": {
      "op": "SWAP2"
    },
    "2378": {
      "op": "SWAP1"
    },
    "2379": {
      "op": "SWAP2"
    },
    "2380": {
      "op": "ADD"
    },
    "2381": {
      "op": "SWAP3"
    },
    "2382": {
      "op": "SWAP2"
    },
    "2383": {
      "op": "POP"
    },
    "2384": {
      "op": "POP"
    },
    "2385": {
      "jump": "o",
      "op": "JUMP"
    },
    "2386": {
      "op": "JUMPDEST"
    },
    "2387": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2394": {
      "op": "SHL"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2397": {
      "op": "MSTORE"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2402": {
      "op": "MSTORE"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2407": {
      "op": "REVERT"
    },
    "2408": {
      "op": "JUMPDEST"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2413": {
      "op": "NOT"
    },
    "2414": {
      "op": "DUP3"
    },
    "2415": {
      "op": "EQ"
    },
    "2416": {
      "op": "ISZERO"
    },
    "2417": {
      "op": "PUSH2",
      "value": "0x97C"
    },
    "2420": {
      "op": "JUMPI"
    },
    "2421": {
      "op": "PUSH2",
      "value": "0x97C"
    },
    "2424": {
      "op": "PUSH2",
      "value": "0x952"
    },
    "2427": {
      "jump": "i",
      "op": "JUMP"
    },
    "2428": {
      "op": "JUMPDEST"
    },
    "2429": {
      "op": "POP"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "op": "SWAP1"
    },
    "2434": {
      "jump": "o",
      "op": "JUMP"
    },
    "2435": {
      "op": "JUMPDEST"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2438": {
      "op": "DUP3"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "LT"
    },
    "2441": {
      "op": "ISZERO"
    },
    "2442": {
      "op": "PUSH2",
      "value": "0x995"
    },
    "2445": {
      "op": "JUMPI"
    },
    "2446": {
      "op": "PUSH2",
      "value": "0x995"
    },
    "2449": {
      "op": "PUSH2",
      "value": "0x952"
    },
    "2452": {
      "jump": "i",
      "op": "JUMP"
    },
    "2453": {
      "op": "JUMPDEST"
    },
    "2454": {
      "op": "POP"
    },
    "2455": {
      "op": "SUB"
    },
    "2456": {
      "op": "SWAP1"
    },
    "2457": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "60bd1fe6ea61d912c798fbbe864fb7b1f0035193",
  "source": "pragma solidity >=0.5.0;\npragma experimental ABIEncoderV2;\n\n/// @title Multicall2 - Aggregate results from multiple read-only function calls\n/// @author Michael Elliot <mike@makerdao.com>\n/// @author Joshua Levine <joshua@makerdao.com>\n/// @author Nick Johnson <arachnid@notdot.net>\n\ncontract Multicall2 {\n    struct Call {\n        address target;\n        bytes callData;\n    }\n    struct Result {\n        bool success;\n        bytes returnData;\n    }\n\n    function aggregate(Call[] memory calls)\n        public\n        returns (uint256 blockNumber, bytes[] memory returnData)\n    {\n        blockNumber = block.number;\n        returnData = new bytes[](calls.length);\n        for (uint256 i = 0; i < calls.length; i++) {\n            (bool success, bytes memory ret) = calls[i].target.call(\n                calls[i].callData\n            );\n            require(success, \"Multicall aggregate: call failed\");\n            returnData[i] = ret;\n        }\n    }\n\n    function blockAndAggregate(Call[] memory calls)\n        public\n        returns (\n            uint256 blockNumber,\n            bytes32 blockHash,\n            Result[] memory returnData\n        )\n    {\n        (blockNumber, blockHash, returnData) = tryBlockAndAggregate(\n            true,\n            calls\n        );\n    }\n\n    function getBlockHash(uint256 blockNumber)\n        public\n        view\n        returns (bytes32 blockHash)\n    {\n        blockHash = blockhash(blockNumber);\n    }\n\n    function getBlockNumber() public view returns (uint256 blockNumber) {\n        blockNumber = block.number;\n    }\n\n    function getCurrentBlockCoinbase() public view returns (address coinbase) {\n        coinbase = block.coinbase;\n    }\n\n    function getCurrentBlockDifficulty()\n        public\n        view\n        returns (uint256 difficulty)\n    {\n        difficulty = block.difficulty;\n    }\n\n    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {\n        gaslimit = block.gaslimit;\n    }\n\n    function getCurrentBlockTimestamp()\n        public\n        view\n        returns (uint256 timestamp)\n    {\n        timestamp = block.timestamp;\n    }\n\n    function getEthBalance(address addr) public view returns (uint256 balance) {\n        balance = addr.balance;\n    }\n\n    function getLastBlockHash() public view returns (bytes32 blockHash) {\n        blockHash = blockhash(block.number - 1);\n    }\n\n    function tryAggregate(bool requireSuccess, Call[] memory calls)\n        public\n        returns (Result[] memory returnData)\n    {\n        returnData = new Result[](calls.length);\n        for (uint256 i = 0; i < calls.length; i++) {\n            (bool success, bytes memory ret) = calls[i].target.call(\n                calls[i].callData\n            );\n\n            if (requireSuccess) {\n                require(success, \"Multicall2 aggregate: call failed\");\n            }\n\n            returnData[i] = Result(success, ret);\n        }\n    }\n\n    function tryBlockAndAggregate(bool requireSuccess, Call[] memory calls)\n        public\n        returns (\n            uint256 blockNumber,\n            bytes32 blockHash,\n            Result[] memory returnData\n        )\n    {\n        blockNumber = block.number;\n        blockHash = blockhash(block.number);\n        returnData = tryAggregate(requireSuccess, calls);\n    }\n}\n",
  "sourceMap": "284:3004:1:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/test/Multicall2.sol",
  "type": "contract"
}